{"version":3,"sources":["main.js","helpers.js","mega-menu.js","auto rotate-tab.js","carousel.js","tabs.js"],"names":["showRegionalOffice","selectedValue","document","getElementById","value","querySelectorAll","forEach","div","classList","add","selectedOffice","querySelector","concat","toLowerCase","remove","openPopupById","id","_document$getElementB2","addEventListener","dropdownLinks","activateCountry","link","l","imgSelector","getAttribute","newImgSrc","img","src","showSelector","content","target","cta","countryName","textContent","trim","innerHTML","e","preventDefault","firstLink","tabs","tabContents","length","tab","t","parentElement","tabSelector","this","activeTabContent","glideElement","glideId","initGlide","el","targetSelector","dataset","imagechangehover","newImg","btn","imgEl","newSrc","targetImg","setTimeout","onload","toggleButton","menu","options","toggle","option","selectedText","console","log","event","contains","accordion","autoClose","button","targetPanel","bsTarget","isOpen","accordionItem","closest","panel","setAttribute","icon","String","arrowIcon","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","type","perPage","parseInt","autoplay","pagination","arrows","pauseOnHover","interval","rewind","breakpoints","JSON","parse","warn","splide","Splide","mount","innerEl","Components","Autoplay","pause","play","slideIndex","carousel","slides","slide","style","display","dropdowns","dropdown","stopPropagation","d","rect","spaceBelow","innerHeight","bottom","spaceAbove","scrollHeight","dots","moreText","counters","countersStarted","observer","IntersectionObserver","entries","entry","isIntersecting","counter","hasPlus","duration","startTime","performance","now","requestAnimationFrame","updateCounter","currentTime","elapsed","progress","Math","min","floor","innerText","unobserve","threshold","counterSection","observe","container","video","state","hasAttribute","timeout","hideControls","showControls","clearTimeout","startAutoHideControls","ended","anchor","contentDiv","trigger","_document$getElementB","popup","scrollTriggered","toggle_visibility","element","toggle_modal","toggle_class","myclass","toggle_class_trigger","scrollY","exploreLink","exploreContent","closeBtn","arrowRotate","modal","poster","targetClass","radio","label","checked","autoChangeInterval","tabLink","tabContent","tabContentInner","currentTabIndex","changeTab","index","clearActive","fadeIn","fadeOutAndIn","opacity","fadeOut","tags","tag","clearInterval","tabLinkIndex","i","getContentIndex","addClassToContent","contentInner","setInterval","innerWidth","tabParent","tabItem","item","activeContent","tabClone","cloneNode","insertAdjacentElement","glideElementsExplore","call","glideItem","glideClass","className","toString","split","join","perView","Glide","bound","indicatorsContainer","items","startX","goToItem","carouselWidth","offsetWidth","offset","transform","indicator","createElement","appendChild","touches","clientX","passive","endX","diffX","abs","Array","from","findIndex","goToNextItem","goToPrevItem","activateTab","section","mgtabRel","megatabs","megaMtabContents","megaMtabHeadings","mgtab","heading","openService","serviceFocus","servicetabcontent","getElementsByClassName","servicetablinks","currentTarget","click","sectionId","firstTab","activateFirstTab","span","c","h","block","links","subheadingText","megaMenu","navbar__menu","clearMegaMenu","navItem","toggleMenu","relatedTarget","parentNode","twice","aToggle","accordionState","accordionItems","toggleAccordion","toggleItem","mobileNavItems","navbar__iconmenu","iconItems","iconItem","clearIconMenu","checkTwice","openItem","resetCount","toggleArrow","includes","detailRow","nextElementSibling","allDetailRows","row","targetId","substring","targetElement","scroll","previousElementSibling","tabButtons","insertBefore","showTab","tabId","activeButton"],"mappings":"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","file":"main.min.js","sourcesContent":["// import 'components/mega-menu.js';\r\n// import 'components/carousel.js';\r\n// import 'components/popup.js';\r\n// import 'utilities/helpers.js';\r\n","//hope page service section\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const dropdownLinks = document.querySelectorAll('.toggleBtn-dropdown-menu a');\r\n\r\n  function activateCountry(link) {\r\n   \r\n    dropdownLinks.forEach(l => l.classList.remove('active'));\r\n    link.classList.add('active');\r\n\r\n\r\n    const imgSelector = link.getAttribute('data-imagechangeclick');\r\n    const newImgSrc = link.getAttribute('data-img');\r\n    if (imgSelector && newImgSrc) {\r\n      const img = document.querySelector(imgSelector);\r\n      if (img) img.src = newImgSrc;\r\n    }\r\n\r\n   \r\n    const showSelector = link.getAttribute('datashowonclick');\r\n    const allContents = document.querySelectorAll('.service-left');\r\n    allContents.forEach(content => content.classList.remove('show'));\r\n\r\n    if (showSelector) {\r\n      const target = document.querySelector(showSelector);\r\n      if (target) target.classList.add('show');\r\n    }\r\n\r\n\r\n    const cta = document.querySelector('.text-cta-link');\r\n    const countryName = link.textContent.trim();\r\n    if (cta) cta.innerHTML = `Connect with a ${countryName} Expert <span class=\"arrow-anim\"></span>`;\r\n  }\r\n\r\n\r\n  dropdownLinks.forEach(link => {\r\n    link.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      activateCountry(link);\r\n    });\r\n  });\r\n\r\n \r\n  const firstLink = dropdownLinks[0];\r\n  if (firstLink) {\r\n    activateCountry(firstLink);\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  /** Pricing Tabs */\r\n  const tabs = document.querySelectorAll('.pricing__tab--country li a');\r\n  const tabContents = document.querySelectorAll('.pricing__country');\r\n\r\n  if (tabs.length > 0 && tabContents.length > 0) {\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        tabs.forEach(t => t.parentElement.classList.remove('tab--active'));\r\n        tabContents.forEach(content => content.classList.remove('pricing--active'));\r\n\r\n        tab.parentElement.classList.add('tab--active');\r\n\r\n        const tabSelector = this.getAttribute('data-tab');\r\n        if (tabSelector) {\r\n          const activeTabContent = document.querySelector(tabSelector);\r\n          if (activeTabContent) {\r\n            activeTabContent.classList.add('pricing--active');\r\n\r\n            const glideElement = activeTabContent.querySelector('.glide');\r\n            if (glideElement) {\r\n              const glideId = glideElement.getAttribute('id');\r\n              if (glideId) {\r\n                initGlide(`#${glideId}`);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n     // change image on hover card-btn\r\n     document.querySelectorAll('[data-imageChangeHover]').forEach(el => {\r\n      const targetSelector = el.dataset.imagechangehover;\r\n      const newImg = el.dataset.img;\r\n      el.addEventListener('mouseenter', () => {\r\n        document.querySelectorAll('.card-btn').forEach(btn => btn.classList.remove('active'));\r\n        el.classList.add('active');\r\n        const targetImg = document.querySelector(targetSelector);\r\n        if (targetImg && newImg) {\r\n          fadeImageChange(targetImg, newImg);\r\n        }\r\n      });\r\n    });\r\n    \r\n    function fadeImageChange(imgEl, newSrc) {\r\n      imgEl.classList.add('fade-out');\r\n      setTimeout(() => {\r\n        imgEl.src = newSrc;\r\n        imgEl.onload = () => imgEl.classList.remove('fade-out');\r\n      }, 150);\r\n    }\r\n  /** Insights Resources Toggle */\r\n  const toggleButton = document.querySelector(\".insights-resources__toggle\");\r\n  const menu = document.querySelector(\".insights-resources__menu\");\r\n\r\n  if (toggleButton && menu) {\r\n    const options = menu.querySelectorAll(\"li\");\r\n\r\n    toggleButton.addEventListener(\"click\", function () {\r\n      menu.classList.toggle(\"show\");\r\n    });\r\n\r\n    options.forEach(option => {\r\n      option.addEventListener(\"click\", function () {\r\n        const selectedText = this.textContent;\r\n        const selectedValue = this.getAttribute(\"data-value\");\r\n        if (selectedText) {\r\n          toggleButton.textContent = selectedText;\r\n        }\r\n        menu.classList.remove(\"show\");\r\n        console.log(`Selected value: ${selectedValue}`);\r\n      });\r\n    });\r\n\r\n    document.addEventListener(\"click\", function (event) {\r\n      if (!toggleButton.contains(event.target) && !menu.contains(event.target)) {\r\n        menu.classList.remove(\"show\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Accordion Regular */\r\n  document.querySelectorAll('.accordion-reg').forEach(accordion => {\r\n    const autoClose = accordion.getAttribute('data-autoClose') !== 'false';\r\n\r\n    accordion.querySelectorAll('.accordion-reg-button').forEach(button => {\r\n      button.addEventListener('click', function () {\r\n        const targetPanel = document.querySelector(this.dataset.bsTarget);\r\n        const isOpen = targetPanel.classList.contains(\"show\");\r\n        const accordionItem = this.closest('.accordion-reg-item');\r\n\r\n        if (autoClose) {\r\n          accordion.querySelectorAll('.accordion-reg-collapse').forEach(panel => {\r\n            if (panel !== targetPanel) {\r\n              panel.classList.remove(\"show\");\r\n\r\n              const btn = accordion.querySelector(`[data-bs-target=\"#${panel.id}\"]`);\r\n              if (btn) btn.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n              const icon = btn?.querySelector(\".arrow\");\r\n              if (icon) icon.classList.remove(\"rotate\");\r\n            }\r\n          });\r\n        }\r\n\r\n        targetPanel.classList.toggle(\"show\");\r\n        this.setAttribute(\"aria-expanded\", String(!isOpen));\r\n\r\n        const arrowIcon = this.querySelector(\".arrow\");\r\n        if (arrowIcon) {\r\n          arrowIcon.classList.toggle(\"rotate\", !isOpen);\r\n        }\r\n\r\n        if (!isOpen) {\r\n          const yOffset = -100;\r\n          const y = accordionItem.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n          window.scrollTo({ top: y, behavior: \"smooth\" });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  /** Home Top Banner Splide Slider */\r\n  // document.querySelectorAll('.splide').forEach(el => {\r\n  //   const options = {\r\n  //     perPage: parseInt(el.dataset.perPage) || 1,\r\n  //     type: el.dataset.type || 'loop',\r\n  //     autoplay: el.dataset.autoplay === 'true',\r\n  //     pagination: el.dataset.pagination !== 'false',\r\n  //     rewind: el.dataset.rewind === 'true',\r\n  //     arrows: el.dataset.arrows !== 'false',\r\n  //   };\r\n  //   if (el.dataset.breakpoints) {\r\n  //     try {\r\n  //       options.breakpoints = JSON.parse(el.dataset.breakpoints);\r\n  //     } catch (e) {\r\n  //       console.warn('Invalid breakpoints JSON for', el, e);\r\n  //     }\r\n  //   }\r\n  //   new Splide(el, options).mount();\r\n  // });\r\n  \r\n  document.querySelectorAll('.splide').forEach(el => {\r\n    const type = el.dataset.type || 'loop';\r\n  \r\n    const options = {\r\n      perPage: parseInt(el.dataset.perPage) || 1,\r\n      type: type,\r\n      autoplay: el.dataset.autoplay === 'true',\r\n      pagination: el.dataset.pagination !== 'false',\r\n      arrows: el.dataset.arrows !== 'false',\r\n      pauseOnHover: false,\r\n      interval: parseInt(el.dataset.interval) || 3000, // Default to 3000ms (3 seconds)\r\n    };\r\n  \r\n    // Only include rewind if not using loop\r\n    if (type !== 'loop') {\r\n      options.rewind = el.dataset.rewind === 'true';\r\n    }\r\n  \r\n    if (el.dataset.breakpoints) {\r\n      try {\r\n        options.breakpoints = JSON.parse(el.dataset.breakpoints);\r\n      } catch (e) {\r\n        console.warn('Invalid breakpoints JSON for', el, e);\r\n      }\r\n    }\r\n  \r\n    const splide = new Splide(el, options);\r\n    splide.mount();\r\n  \r\n    // Pause/play autoplay on specific inner elements only\r\n    el.querySelectorAll('.slider-content, .trending-insights').forEach(innerEl => {\r\n      innerEl.addEventListener('mouseenter', () => {\r\n        if (splide.Components.Autoplay) {\r\n          splide.Components.Autoplay.pause();\r\n        }\r\n      });\r\n      innerEl.addEventListener('mouseleave', () => {\r\n        if (splide.Components.Autoplay) {\r\n          splide.Components.Autoplay.play();\r\n        }\r\n      });\r\n    });\r\n  });\r\n  \r\n  \r\n  /** Logo Slides (Our Brands Page) */\r\n  let slideIndex = 0;\r\n  function carousel() {\r\n    const slides = document.querySelectorAll(\".LogoSlides\");\r\n\r\n    if (slides.length === 0) return; \r\n\r\n    slides.forEach(slide => {\r\n      slide.style.display = \"none\";\r\n    });\r\n\r\n    slideIndex++;\r\n    if (slideIndex > slides.length) {\r\n      slideIndex = 1;\r\n    }\r\n\r\n    slides[slideIndex - 1].style.display = \"block\";\r\n\r\n    setTimeout(carousel, 9000);\r\n  }\r\n  carousel();\r\n\r\n  /** Toggle Dropdown in Home Service Section */\r\n  const dropdowns = document.querySelectorAll('.toggleBtn-dropdown');\r\n\r\n  dropdowns.forEach(dropdown => {\r\n    const button = dropdown.querySelector('.toggleBtn-dropdown-button');\r\n    const menu = dropdown.querySelector('.toggleBtn-dropdown-menu');\r\n\r\n    button.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n\r\n      dropdowns.forEach(d => {\r\n        if (d !== dropdown) d.classList.remove('open', 'drop-up');\r\n      });\r\n\r\n      dropdown.classList.toggle('open');\r\n\r\n      if (dropdown.classList.contains('open')) {\r\n        const rect = menu.getBoundingClientRect();\r\n        const spaceBelow = window.innerHeight - rect.bottom;\r\n        const spaceAbove = rect.top;\r\n        const requiredHeight = menu.scrollHeight;\r\n\r\n        if (spaceBelow < requiredHeight && spaceAbove > spaceBelow) {\r\n          dropdown.classList.add('drop-up');\r\n        } else {\r\n          dropdown.classList.remove('drop-up');\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  window.addEventListener('click', () => {\r\n    dropdowns.forEach(d => d.classList.remove('open', 'drop-up'));\r\n  });\r\n\r\n  /** Toggle Expand Section for Trending Insights */\r\n  document.querySelectorAll('.expand-toggle').forEach((btn) => {\r\n    btn.addEventListener('click', () => {\r\n      const expander = btn.closest('.expand-sect');\r\n      const content = expander.querySelector('.expand-content');\r\n      const icon = btn.querySelector('.icon');\r\n\r\n      content.classList.toggle('open');\r\n      icon.textContent = content.classList.contains('open') ? '−' : '+';\r\n    });\r\n  });\r\n\r\n  /** Toggle Read More Text on Asia Manufacturing Index */\r\n  document.querySelectorAll('.toggle-btnls').forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const content = this.parentElement;\r\n      const dots = content.querySelector('.dots');\r\n      const moreTexts = content.querySelectorAll('.more-text');\r\n\r\n      moreTexts.forEach(moreText => {\r\n        if (moreText.style.display === \"none\" || moreText.style.display === \"\") {\r\n          moreText.style.display = \"block\";\r\n          dots.style.display = \"none\";\r\n          button.textContent = \"-less\";\r\n        } else {\r\n          moreText.style.display = \"none\";\r\n          dots.style.display = \"none\";\r\n          button.textContent = \"Read full summary\";\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  /** Counter Animation in Home Who We Are Section */\r\n  const counters = document.querySelectorAll('.counter');\r\n  let countersStarted = false;\r\n  \r\n  function startCounters() {\r\n    counters.forEach(counter => {\r\n      const target = +counter.getAttribute('data-target');\r\n      const hasPlus = counter.getAttribute('data-plus') === \"true\";\r\n      const duration = +counter.getAttribute('data-speed') || 2000; // Duration in ms\r\n  \r\n      const startTime = performance.now();\r\n  \r\n      function updateCounter(currentTime) {\r\n        const elapsed = currentTime - startTime;\r\n        const progress = Math.min(elapsed / duration, 1); // Clamp to 1\r\n        const value = Math.floor(progress * target);\r\n  \r\n        counter.innerText = hasPlus ? `${value}+` : `${value}`;\r\n  \r\n        if (progress < 1) {\r\n          requestAnimationFrame(updateCounter);\r\n        } else {\r\n          counter.innerText = hasPlus ? `${target}+` : `${target}`;\r\n        }\r\n      }\r\n  \r\n      requestAnimationFrame(updateCounter);\r\n    });\r\n  }\r\n  \r\n  const observerOptions = {\r\n    threshold: 0.4\r\n  };\r\n  \r\n  const observer = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting && !countersStarted) {\r\n        startCounters();\r\n        countersStarted = true;\r\n        observer.unobserve(entry.target);\r\n      }\r\n    });\r\n  }, observerOptions);\r\n  \r\n  const counterSection = document.querySelector('.counter-section');\r\n  if (counterSection) {\r\n    observer.observe(counterSection);\r\n  }\r\n  \r\n  \r\n\r\n  /** Home Video Who We Are Section\r\n  const container = document.querySelector(\".video-container\");\r\n  if (container) {\r\n    const video = container.querySelector(\"video\");\r\n    const overlay = container.querySelector(\".video-overlay\");\r\n\r\n    container.addEventListener(\"click\", () => {\r\n      if (container.dataset.state === \"initial\") {\r\n        video.setAttribute(\"controls\", true);\r\n        video.play();\r\n        container.dataset.state = \"playing\";\r\n        startAutoHideControls();\r\n      }\r\n    });\r\n\r\n    video.addEventListener(\"pause\", () => {\r\n      if (container.dataset.state === \"playing\" && container.hasAttribute(\"data-no-pause\") && !video.ended) {\r\n        video.play();\r\n      }\r\n    });\r\n\r\n    function startAutoHideControls() {\r\n      if (!container.hasAttribute(\"data-autohide\")) return;\r\n\r\n      let timeout;\r\n      const hideControls = () => {\r\n        video.classList.add(\"hide-controls\");\r\n      };\r\n      const showControls = () => {\r\n        video.classList.remove(\"hide-controls\");\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(hideControls, 3000);\r\n      };\r\n\r\n      video.addEventListener(\"mousemove\", showControls);\r\n      video.addEventListener(\"touchstart\", showControls);\r\n      timeout = setTimeout(hideControls, 3000);\r\n    }\r\n  }*/\r\n\r\n\r\n  document.querySelectorAll(\".video-container\").forEach(container => {\r\n    const video = container.querySelector(\"video\");\r\n    const overlay = container.querySelector(\".video-overlay\");\r\n\r\n    container.addEventListener(\"click\", () => {\r\n  if (container.dataset.state === \"initial\") {\r\n    video.setAttribute(\"controls\", true);\r\n    video.play();\r\n    container.dataset.state = \"playing\";\r\n    startAutoHideControls(video, container); // this is fine to keep\r\n  }\r\n});\r\n\r\n    // Prevent pausing if needed\r\n    video.addEventListener(\"pause\", () => {\r\n      if (\r\n        container.dataset.state === \"playing\" &&\r\n        container.hasAttribute(\"data-no-pause\") &&\r\n        !video.ended\r\n      ) {\r\n        video.play();\r\n      }\r\n    });\r\n  });\r\n\r\n  function enterFullscreen(el) {\r\n    if (el.requestFullscreen) el.requestFullscreen();\r\n    else if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\r\n    else if (el.msRequestFullscreen) el.msRequestFullscreen();\r\n  }\r\n\r\n  function startAutoHideControls(video, container) {\r\n    if (!container.hasAttribute(\"data-autohide\")) return;\r\n\r\n    let timeout;\r\n    const hideControls = () => video.classList.add(\"hide-controls\");\r\n    const showControls = () => {\r\n      video.classList.remove(\"hide-controls\");\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(hideControls, 3000);\r\n    };\r\n\r\n    video.addEventListener(\"mousemove\", showControls);\r\n    video.addEventListener(\"touchstart\", showControls);\r\n    timeout = setTimeout(hideControls, 3000);\r\n  }\r\n});\r\n\r\n/** Article Read More Toggle (outside DOMContentLoaded) */\r\ndocument.querySelectorAll(\"a[data-togglearticle]\").forEach(anchor => {\r\n  anchor.addEventListener('click', function (e) {\r\n    e.preventDefault();\r\n    const contentDiv = document.getElementById(this.getAttribute(\"data-togglearticle\"));\r\n    if (contentDiv) {\r\n      contentDiv.classList.toggle(\"d-none\");\r\n      this.innerText = this.innerText === 'more+' ? 'less-' : 'more+';\r\n    }\r\n  });\r\n});\r\n\r\n/** Show Regional Office (outside DOMContentLoaded) */\r\nfunction showRegionalOffice() {\r\n  const selectedValue = document.getElementById(\"RegionaltS\").value;\r\n  document.querySelectorAll(\".regional-office > div\").forEach(div => {\r\n    div.classList.add(\"regional-hidden\");\r\n  });\r\n  if (selectedValue !== \"Select the office\") {\r\n    const selectedOffice = document.querySelector(`.regional-office-${selectedValue.toLowerCase()}`);\r\n    if (selectedOffice) {\r\n      selectedOffice.classList.remove(\"regional-hidden\");\r\n    }\r\n  }\r\n}\r\n\r\n      // Open popup on click\r\n      document.querySelectorAll('[data-popup]').forEach(trigger => {\r\n        trigger.addEventListener('click', e => {\r\n          e.preventDefault();\r\n          const id = trigger.getAttribute('data-popup');\r\n          document.getElementById(id)?.classList.add('active');\r\n        });\r\n      });\r\n  \r\n      // Close popup\r\n      document.querySelectorAll('.popup-overlay').forEach(popup => {\r\n        popup.addEventListener('click', e => {\r\n          if (e.target === popup || e.target.classList.contains('popup-close')) {\r\n            popup.classList.remove('active');\r\n          }\r\n        });\r\n      });\r\n  \r\n      // Open dynamically\r\n      function openPopupById(id) {\r\n        document.getElementById(id)?.classList.add('active');\r\n      }\r\n      // Open the popup after 3 seconds\r\n          setTimeout(() => {\r\n          openPopupById('dynamic-popup');\r\n          }, 3000);\r\n  \r\n  \r\n      // Scroll-based popup trigger\r\n      let scrollTriggered = false;\r\n      window.addEventListener('scroll', () => {\r\n        if (!scrollTriggered && window.scrollY > 500) {\r\n          openPopupById('scroll-popup');\r\n          scrollTriggered = true;\r\n        }\r\n      });\r\n  // on click expand div\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n    const exploreLink = document.querySelector('.text-cta-expnd');\r\n    const exploreContent = document.querySelector('.explore-content');\r\n    const closeBtn = document.querySelector('.explore-close');\r\n  \r\n    // Only attempt to find .arrow-anim *inside* exploreLink if it exists\r\n    const arrowRotate = exploreLink?.querySelector('.arrow-anim');\r\n  \r\n    if (exploreLink && exploreContent && closeBtn && arrowRotate) {\r\n      exploreLink.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        exploreContent.classList.add('show');\r\n        arrowRotate.classList.add('arrow-rotate');\r\n      });\r\n  \r\n      closeBtn.addEventListener('click', function () {\r\n        exploreContent.classList.remove('show');\r\n        arrowRotate.classList.remove('arrow-rotate');\r\n      });\r\n    } else {\r\n      console.warn('One or more required elements were not found in the DOM.');\r\n      console.log({ exploreLink, exploreContent, closeBtn, arrowRotate });\r\n    }\r\n\r\n    //video popup controll\r\nconst modal = document.getElementById(\"center-popup\");\r\nconst popupCloseBtn = modal ? modal.querySelector(\".popup-close\") : null;\r\nconst video = document.getElementById(\"eventVideo\");\r\n\r\n\r\ndocument.querySelectorAll('.event-video-item').forEach(trigger => {\r\n  trigger.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    video.src = trigger.getAttribute(\"src\");\r\n    video.poster = trigger.getAttribute(\"data-cover\");\r\n    modal.classList.add('active');\r\n  });\r\n});\r\n\r\n\r\nmodal.addEventListener(\"click\", function(e) {\r\n  if (e.target === modal || e.target.classList.contains(\"popup-close\")) {\r\n    modal.classList.remove(\"active\");\r\n    video.pause();\r\n    video.currentTime = 0; \r\n  }\r\n});\r\n//get-in-touch\r\nconst buttons = document.querySelectorAll(\"[data-show-on-click]\");\r\n\r\n  buttons.forEach((button) => {\r\n    const targetClass = button.getAttribute(\"data-show-on-click\");\r\n\r\n    button.addEventListener(\"click\", function () {\r\n      const target = document.querySelector(`.${targetClass}`);\r\n      if (!target) return;\r\n\r\n      const isVisible = target.style.display === \"block\";\r\n\r\n      if (isVisible) {\r\n        target.style.display = \"none\";\r\n      } else {\r\n        target.style.display = \"block\";\r\n\r\n        // Scroll to element with 172px offset from top\r\n        const elementTop = target.getBoundingClientRect().top + window.pageYOffset;\r\n        const scrollTo = elementTop - 85;\r\n\r\n        window.scrollTo({\r\n          top: scrollTo,\r\n          behavior: \"smooth\"\r\n        });\r\n      }\r\n    });\r\n  });\r\n  \r\n//location page\r\n\r\n  // const imageCards = document.querySelectorAll(\"[data-show-on-click]\");\r\n  // imageCards.forEach(card => {\r\n  //   card.addEventListener(\"click\", () => {\r\n  //     const targetId = card.getAttribute(\"data-show-on-click\");\r\n  //     const target = document.getElementById(targetId);\r\n  //     document.querySelectorAll(\".location-card-mian\").forEach(loc => {\r\n  //       loc.classList.remove(\"show\");\r\n  //     });\r\n  //     if (target) {\r\n  //       target.classList.add(\"show\");\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  //  const imageCards = document.querySelectorAll(\"[data-show-on-click]\");\r\n  // imageCards.forEach(card => {\r\n  //   card.addEventListener(\"click\", () => {\r\n  //     const targetId = card.getAttribute(\"data-show-on-click\");\r\n  //     const target = document.getElementById(targetId);\r\n  //     document.querySelectorAll(\".location-card-mian\").forEach(loc => {\r\n  //       loc.classList.remove(\"show\");\r\n  //     });\r\n  //     imageCards.forEach(c => c.classList.remove(\"selected\"));\r\n  //     if (target) {\r\n  //       target.classList.add(\"show\");\r\n  //       card.classList.add(\"selected\");\r\n  //     }\r\n  //   });\r\n  // });\r\n  });\r\n\r\n  //Radio button select on location and personnel\r\n    document.querySelectorAll('.custom-radio input[type=\"radio\"]').forEach(radio => {\r\n    radio.addEventListener('change', () => {\r\n      document.querySelectorAll('.custom-radio').forEach(label => {\r\n        label.classList.remove('selected');\r\n      });\r\n      if (radio.checked) {\r\n        radio.closest('.custom-radio').classList.add('selected');\r\n      }\r\n    });\r\n  });\r\n  document.querySelectorAll('.custom-radio input[type=\"radio\"]:checked').forEach(radio => {\r\n    radio.closest('.custom-radio').classList.add('selected');\r\n  });\r\n\r\n  \r\n\r\n\r\n\r\n\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  // Function to handle service tabs\r\n  window.openService = function (event, serviceFocus) {\r\n      event.stopPropagation();\r\n      var servicetabcontent = document.getElementsByClassName(\"servicetabcontent\");\r\n      var servicetablinks = document.getElementsByClassName(\"servicetablinks\");\r\n\r\n      for (let i = 0; i < servicetabcontent.length; i++) {\r\n          servicetabcontent[i].style.display = \"none\";\r\n      }\r\n      for (let i = 0; i < servicetablinks.length; i++) {\r\n          servicetablinks[i].classList.remove(\"activeservice\");\r\n      }\r\n\r\n      document.getElementById(serviceFocus).style.display = \"flex\";\r\n      event.currentTarget.classList.add(\"activeservice\");\r\n  };\r\n\r\n  // Automatically open the default service tab\r\n  document.getElementById(\"Opendefault\").click();\r\n\r\n  // Function to activate mega menu tabs\r\n  function activateTab(section, mgtabRel) {\r\n      const megatabs = section.querySelectorAll('.mega-mtabs li');\r\n      const megaMtabContents = section.querySelectorAll('.mega-mtab-content');\r\n      const megaMtabHeadings = section.querySelectorAll('.mega-mtab-heading');\r\n\r\n      megatabs.forEach(mgtab => {\r\n          mgtab.classList.toggle('active', mgtab.getAttribute('rel') === mgtabRel);\r\n      });\r\n      megaMtabContents.forEach(content => {\r\n          content.style.display = content.id === mgtabRel ? 'flex' : 'none';\r\n      });\r\n      megaMtabHeadings.forEach(heading => {\r\n          heading.classList.toggle('d_active', heading.getAttribute('rel') === mgtabRel);\r\n      });\r\n  }\r\n\r\n  function activateFirstTab(section) {\r\n      const firstTab = section.querySelector('.mega-mtabs li');\r\n      if (firstTab) {\r\n          firstTab.classList.add('active');\r\n          activateTab(section, firstTab.getAttribute('rel'));\r\n      }\r\n  }\r\n\r\n  function setupSection(sectionId) {\r\n      const section = document.getElementById(sectionId);\r\n      if (!section) return;\r\n\r\n      activateFirstTab(section);\r\n\r\n      section.querySelectorAll('.mega-mtabs li span').forEach(span => {\r\n          span.addEventListener('mouseover', function () {\r\n              activateTab(section, this.parentElement.getAttribute('rel'));\r\n          });\r\n      });\r\n\r\n      section.querySelectorAll('.mega-mtab-heading').forEach(heading => {\r\n          heading.addEventListener('click', function () {\r\n              const content = section.querySelector(`#${this.getAttribute('rel')}`);\r\n              const megaMtabContents = section.querySelectorAll('.mega-mtab-content');\r\n              const megaMtabHeadings = section.querySelectorAll('.mega-mtab-heading');\r\n\r\n              if (content.style.display === 'block') {\r\n                  content.style.display = 'none';\r\n                  this.classList.remove('d_active');\r\n              } else {\r\n                  megaMtabContents.forEach(c => c.style.display = 'none');\r\n                  megaMtabHeadings.forEach(h => h.classList.remove('d_active'));\r\n                  content.style.display = 'block';\r\n                  this.classList.add('d_active');\r\n              }\r\n          });\r\n      });\r\n  }\r\n\r\n  const sections = ['serviceAreas', 'industryFocus', 'resources-section-menu', 'locations-section-menu', 'about-section-menu','events-webinars-menu'];\r\n  sections.forEach(setupSection);\r\n\r\n  // Add hover effect for service page subheading\r\n  const pageSubheading = document.querySelectorAll('.page-link-block');\r\n  pageSubheading.forEach(block => {\r\n      const links = block.querySelectorAll('ul');\r\n      const subheadingText = block.querySelector('.service-page-subheading a');\r\n\r\n      if (subheadingText) {\r\n          links.forEach(link => {\r\n              link.addEventListener('mouseover', () => subheadingText.classList.add('text-black'));\r\n              link.addEventListener('mouseout', () => subheadingText.classList.remove('text-black'));\r\n          });\r\n      }\r\n  });\r\n\r\n  // Mega menu close button\r\n  document.querySelectorAll(\".mega-menu-close-btn\").forEach(closeBtn => {\r\n      closeBtn.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n          let megaMenu = this.closest('.navbar__megamenu');\r\n          if (megaMenu) {\r\n              megaMenu.style.display = 'none';\r\n              setTimeout(() => { megaMenu.style.display = ''; }, 600);\r\n          }\r\n      });\r\n  });\r\n\r\n  // Mega menu toggle\r\n  const navbar__menu = document.querySelector('.navbar__menu');\r\n  const navItems = document.querySelectorAll('ul.navbar__menu > li');\r\n\r\n  navItems.forEach(navItem => {\r\n      navItem.addEventListener('click', function (e) {\r\n          e.stopPropagation();\r\n          clearMegaMenu();\r\n\r\n          let toggleMenu = this.querySelector('.navbar__togglemenu');\r\n          let megaMenu = this.querySelector('.navbar__megamenu');\r\n\r\n          if (toggleMenu && megaMenu) {\r\n              toggleMenu.classList.toggle(\"menu-opened\");\r\n              megaMenu.classList.toggle(\"menu-expanded\");\r\n          }\r\n      });\r\n\r\n      navItem.addEventListener('mouseleave', function (event) {\r\n          var e = event.relatedTarget;\r\n          while (e && e.parentNode && e.parentNode !== window) {\r\n              if (e.parentNode === this || e === this) {\r\n                  return false;\r\n              }\r\n              e = e.parentNode;\r\n          }\r\n      });\r\n  });\r\n\r\n  navbar__menu.addEventListener('mouseleave', function (event) {\r\n      if (!document.querySelector('.navbar').contains(event.relatedTarget)) {\r\n          clearMegaMenu();\r\n          resetTwice();\r\n      }\r\n  });\r\n\r\n  function clearMegaMenu() {\r\n      document.querySelectorAll('.navbar__togglemenu.menu-opened').forEach(btn => {\r\n          btn.classList.remove(\"menu-opened\");\r\n      });\r\n\r\n      document.querySelectorAll('.navbar__megamenu.menu-expanded').forEach(menu => {\r\n          menu.classList.remove(\"menu-expanded\");\r\n      });\r\n  }\r\n\r\n  function clickedTwice(element) {\r\n      let btn = element.children[0];\r\n      btn.dataset.twice = parseInt(btn.dataset.twice || 0, 10) + 1;\r\n\r\n      if (btn.dataset.twice == 2) {\r\n          clearMegaMenu();\r\n          btn.dataset.twice = 0;\r\n      }\r\n  }\r\n\r\n  function resetTwice() {\r\n      document.querySelectorAll('ul.navbar__menu > li > a.navbar__togglemenu').forEach(btn => {\r\n          btn.dataset.twice = 0;\r\n      });\r\n  }\r\n\r\n  \r\n});\r\n\r\n// Helper: Toggle visibility\r\nfunction toggle_visibility(element) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    if(e.style.display == 'block') {\r\n      e.style.display = 'none';\r\n    } else {\r\n      e.style.display = 'block';\r\n    }\r\n  }\r\n}\r\n\r\n// Helper: Toggle modal\r\nfunction toggle_modal(element) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.classList.toggle(\"show-modal\");\r\n  }\r\n}\r\n\r\n// Helper: Toggle a class\r\nfunction toggle_class(element, myclass) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.addEventListener('click', function() {\r\n      this.classList.toggle(myclass)\r\n    })\r\n  }\r\n}\r\n\r\nfunction toggle_class_trigger(element, myclass) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.classList.toggle(myclass)\r\n  }\r\n}\r\n\r\n// Component: Toggle hamburger menu animation\r\ntoggle_class(\".navbar__hamburger\", \"menu-show\");\r\n\r\n// Component: Toggle accordions\r\nif (document.querySelector('.c-accordion') !== null) {\r\n  const accordionItems = document.querySelectorAll(\".c-accordion__title\");\r\n\r\n  function aToggle(e) {\r\n    let target = e.target.className || null;\r\n    let link = this.getAttribute('href');\r\n\r\n    if (target == 'c-accordion__icon' || link == '#') {\r\n      e.preventDefault();\r\n      const accordionState = this.getAttribute('aria-expanded');\r\n\r\n      for (i = 0; i < accordionItems.length; i++) {\r\n        accordionItems[i].setAttribute('aria-expanded', 'false');\r\n      }\r\n\r\n      if (accordionState == 'false') {\r\n        this.setAttribute('aria-expanded', 'true');\r\n      }\r\n    }\r\n  }\r\n\r\n  accordionItems.forEach(item => item.addEventListener('click', aToggle));\r\n};\r\n\r\n// Component: Toggle mobile menu accordion\r\nif (document.querySelector('.navbar__menuwrap') !== null) {\r\n  const mobileNavItems = document.querySelectorAll(\".navbar__togglemenu\");\r\n\r\n  function toggleAccordion() {\r\n    const toggleItem = this.getAttribute('aria-expanded');\r\n    \r\n    for (i = 0; i < mobileNavItems.length; i++) {\r\n      mobileNavItems[i].setAttribute('aria-expanded', 'false');\r\n    }\r\n    \r\n    if (toggleItem == 'false') {\r\n      this.setAttribute('aria-expanded', 'true');\r\n    }\r\n  }\r\n\r\n  if (mobileNavItems.length > 0) {\r\n    mobileNavItems.forEach(item => item.addEventListener('click', toggleAccordion));\r\n  }\r\n}\r\n\r\n// Icon menu\r\nconst navbar__iconmenu = document.querySelector('.navbar__iconmenu');\r\nconst iconItems = document.querySelectorAll('ul.navbar__iconmenu > li > a');\r\n\r\nfor (var i = 0; i <= iconItems.length; i++) {\r\n  let iconItem = iconItems[i];\r\n  if (iconItem && iconItem.hasAttribute(\"data-twice\")) {\r\n    iconItem.addEventListener('click', function(e) {\r\n      clearIconMenu();\r\n      this.classList.toggle(\"menu-opened\");\r\n      checkTwice(this);\r\n    })\r\n  }\r\n}\r\n\r\nnavbar__iconmenu.addEventListener('mouseleave', function (event) {\r\n  clearIconMenu();\r\n  resetCount();\r\n});\r\n    \r\n// Close the menu when clicking outside\r\ndocument.addEventListener('click', function (event) {\r\n  if (!navbar__iconmenu.contains(event.target)) {\r\n    clearIconMenu();\r\n    resetCount();\r\n  }\r\n});\r\n\r\nfunction clearIconMenu() {\r\n  let openItem = document.querySelector('ul.navbar__iconmenu li a.menu-opened');\r\n  if (openItem) {\r\n    openItem.classList.toggle(\"menu-opened\");\r\n  }\r\n}\r\n\r\nfunction checkTwice(element) {\r\n  element.dataset.twice = parseInt(element.dataset.twice, 10) + 1;\r\n  if (element.dataset.twice == 2) {\r\n    clearIconMenu();\r\n    element.dataset.twice = 0;\r\n  }\r\n}\r\nfunction resetCount() {\r\n  let btns = document.querySelectorAll('ul.navbar__iconmenu > li > a[data-twice]');\r\n  btns.forEach(function (btn) {\r\n    btn.dataset.twice = 0;\r\n  });\r\n}\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n    const tabLink = document.querySelectorAll('.c-tab__menu__item');\r\n    const tabContent = document.querySelectorAll('.c-tab__content__item');\r\n    const tabContentInner = document.querySelectorAll('.c-tab__content__inner');\r\n    let currentTabIndex = 0;\r\n    let autoChangeInterval;\r\n\r\n    //console.log(tabLink, tabContent, tabContentInner); // Debugging: Check if elements exist\r\n\r\n    function changeTab(index) {\r\n        if (!tabLink[index] || !tabContent[index] || !tabContentInner[index]) return; // Prevent errors\r\n        clearActive(tabLink);\r\n        clearActive(tabContent);\r\n        tabLink[index].classList.add('c-tab--active');\r\n        tabContent[index].classList.add('c-tab--active');\r\n        fadeIn(tabContentInner[index]);\r\n    }\r\n\r\n    function startAutoChange() {\r\n        if (window.innerWidth < 768) return;\r\n        autoChangeInterval = setInterval(() => {\r\n            currentTabIndex = (currentTabIndex + 1) % tabLink.length;\r\n            fadeOutAndIn();\r\n        }, 4000);\r\n    }\r\n\r\n    function fadeOutAndIn() {\r\n        if (!tabContentInner[currentTabIndex]) return;\r\n        fadeOut(tabContentInner[currentTabIndex]);\r\n        setTimeout(() => {\r\n            changeTab(currentTabIndex);\r\n        }, 500);\r\n    }\r\n\r\n    function fadeIn(element) {\r\n        if (!element) return;\r\n        element.style.opacity = 0;\r\n        element.style.display = 'block';\r\n        setTimeout(() => {\r\n            element.style.opacity = 1;\r\n        }, 50);\r\n    }\r\n\r\n    function fadeOut(element) {\r\n        if (!element) return;\r\n        element.style.opacity = 1;\r\n        setTimeout(() => {\r\n            element.style.opacity = 0;\r\n            element.style.display = 'none';\r\n        }, 500);\r\n    }\r\n\r\n    function getContentIndex(content) {\r\n        for (let i = 0; i < content.length; i++) {\r\n            if (content[i].classList.contains(\"c-tab--active\")) {\r\n                return content[i].dataset.index;\r\n            }\r\n        }\r\n        return -1; // Prevent undefined errors\r\n    }\r\n\r\n    function addClassToContent(index, content, myclass) {\r\n        for (let i = 0; i < content.length; i++) {\r\n            if (content[i].dataset.index == index) {\r\n                content[i].classList.add(myclass);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearActive(tags) {\r\n        tags.forEach(tag => tag.classList.remove(\"c-tab--active\"));\r\n    }\r\n\r\n    // Initialize the first tab on page load\r\n    if (tabLink.length > 0) changeTab(currentTabIndex);\r\n\r\n    tabLink.forEach(link => {\r\n        link.addEventListener('mouseenter', function () {\r\n            clearInterval(autoChangeInterval);\r\n            let tabLinkIndex = this.dataset.index;\r\n            let tabContentIndex = getContentIndex(tabContent);\r\n            if (tabLinkIndex !== tabContentIndex) {\r\n                clearActive(tabLink);\r\n                clearActive(tabContent);\r\n                this.classList.add('c-tab--active');\r\n                addClassToContent(tabLinkIndex, tabContent, 'c-tab--active');\r\n                if (tabContentInner[tabLinkIndex]) fadeIn(tabContentInner[tabLinkIndex]);\r\n            }\r\n        });\r\n\r\n        link.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n        });\r\n    });\r\n\r\n    tabContentInner.forEach(contentInner => {\r\n        contentInner.addEventListener('mouseenter', function () {\r\n            clearInterval(autoChangeInterval);\r\n        });\r\n\r\n        contentInner.addEventListener('mouseleave', function () {\r\n            autoChangeInterval = setInterval(() => {\r\n                currentTabIndex = (currentTabIndex + 1) % tabLink.length;\r\n                fadeOutAndIn();\r\n            }, 4000);\r\n        });\r\n    });\r\n\r\n    // Start auto-change function\r\n    startAutoChange();\r\n\r\n    // Vertical Tabs Handling\r\n    if (document.querySelector('.c-tab--vertical') !== null) {\r\n        const tabLink = document.querySelectorAll('.c-tab__menu__item');\r\n        const tabItem = document.querySelectorAll('.c-tab__content__item');\r\n\r\n        function changeTab(e) {\r\n            e.preventDefault();\r\n            let tabParent = this.parentElement;\r\n            if (!tabParent.classList.contains('c-tab--active')) {\r\n                tabItem.forEach(item => {\r\n                    item.classList.remove(\"c-tab--active\");\r\n                    let contentInner = item.querySelector('.c-tab__content__inner');\r\n                    if (contentInner) {\r\n                        contentInner.style.opacity = 0;\r\n                        contentInner.style.display = 'none';\r\n                    }\r\n                });\r\n\r\n                tabParent.classList.add('c-tab--active');\r\n                let activeContent = tabParent.querySelector('.c-tab__content__inner');\r\n                if (activeContent) {\r\n                    activeContent.style.opacity = 1;\r\n                    activeContent.style.display = 'block';\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < tabLink.length; i++) {\r\n            let tabClone = tabLink[i].cloneNode(true);\r\n            tabClone.classList.remove('c-tab--active', 'c-tab__menu__item');\r\n            tabClone.classList.add('c-tab__content__btn');\r\n            tabClone.addEventListener('click', changeTab);\r\n            let tabContent = document.querySelector(`.c-tab__content__item[data-index='${i}']`);\r\n            if (tabContent) tabContent.insertAdjacentElement('afterbegin', tabClone);\r\n        }\r\n    }\r\n});","// carousel for mobile \r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n  var glideElementsExplore = document.querySelectorAll('.explore-further-slider');\r\n  [].forEach.call(glideElementsExplore, function(glideItem) {\r\n    var glideClass = '.' + glideItem.className.toString().split(' ').join('.');\r\n\r\n    var perView = 3;\r\n    var totalSlide = 1;\r\n    if (glideItem.getAttribute('data-preView')) perView = glideItem.getAttribute('data-preView');\r\n    if (glideItem.getAttribute('data-preView')) totalSlide = glideItem.getAttribute('data-totalSlide');\r\n\r\n\r\n    new Glide(glideClass, {\r\n      // type: \"carousel\",\r\n      type: \"slider\",\r\n      // focusAt: \"center\",\r\n      perView: perView,\r\n      // startAt: 1,\r\n      bound: true,\r\n      breakpoints: {\r\n        1024: {\r\n          perView: perView,\r\n        },\r\n        768: {\r\n          perView: 1,\r\n        },\r\n      },\r\n    }).mount();\r\n  });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  const carousels = document.querySelectorAll('.carousel');\r\n  carousels.forEach(carousel => {\r\n  const indicatorsContainer = carousel.querySelector('.carousel-indicators');\r\n  const items = carousel.querySelectorAll('.carousel-item');\r\n  let startX = null;\r\n  items.forEach((item, index) => {\r\n  const indicator = document.createElement('div');\r\n  indicator.classList.add('carousel-indicator');\r\n  if (index === 0) indicator.classList.add('active');\r\n  indicator.addEventListener('click', () => {\r\n  goToItem(index, carousel);\r\n  });\r\n  indicatorsContainer.appendChild(indicator);\r\n  });\r\n  function goToItem(index, carousel) {\r\n  const carouselWidth = carousel.offsetWidth;\r\n  const offset = index * carouselWidth;\r\n  carousel.querySelector('.carousel-inner').style.transform = `translateX(-${offset}px)`;\r\n  const indicators = indicatorsContainer.querySelectorAll('.carousel-indicator');\r\n  indicators.forEach((indicator, i) => {\r\n  indicator.classList.toggle('active', i === index);\r\n  });\r\n  }\r\n  // Swipe gesture handling\r\n  carousel.addEventListener('touchstart', touchStart, { passive: true });\r\n  carousel.addEventListener('touchmove', touchMove, { passive: true });\r\n  function touchStart(event) {\r\n  startX = event.touches[0].clientX;\r\n  }\r\n  function touchMove(event) {\r\n  if (!startX) return;\r\n  const endX = event.touches[0].clientX;\r\n  const diffX = startX - endX;\r\n  if (Math.abs(diffX) > 50) {\r\n  if (diffX > 0) {\r\n  // Swiped left\r\n  goToNextItem(carousel);\r\n  } else {\r\n  // Swiped right\r\n  goToPrevItem(carousel);\r\n  }\r\n  startX = null;\r\n  }\r\n  }\r\n  function goToNextItem(carousel) {\r\n  const currentActiveIndex = Array.from(indicatorsContainer.querySelectorAll('.carousel-indicator')).findIndex(indicator => indicator.classList.contains('active'));\r\n  const nextIndex = (currentActiveIndex + 1) % items.length;\r\n  goToItem(nextIndex, carousel);\r\n  }\r\n  function goToPrevItem(carousel) {\r\n  const currentActiveIndex = Array.from(indicatorsContainer.querySelectorAll('.carousel-indicator')).findIndex(indicator => indicator.classList.contains('active'));\r\n  const prevIndex = (currentActiveIndex - 1 + items.length) % items.length;\r\n  goToItem(prevIndex, carousel);\r\n  }\r\n  });\r\n  });","    // table tab\r\n    document.querySelectorAll('.table-secondary').forEach(function(item) {\r\n        item.addEventListener('click', function() {\r\n        var detailRow = this.nextElementSibling;\r\n        var allDetailRows = document.querySelectorAll('.tier-details');\r\n        if (detailRow.classList.contains('tier-details')) {\r\n        allDetailRows.forEach(function(row) {\r\n        if (row !== detailRow && !row.classList.contains('hidden')) {\r\n        //row.classList.add('hidden');\r\n        //row.previousElementSibling.querySelector('.arrow-move').innerHTML = '<img src=\"https://dsa-2021.netlify.app/assets/img/right-arrow-t.svg\" alt=\"image\">';\r\n        }\r\n        });\r\n        detailRow.classList.toggle('hidden');\r\n        var arrow = this.querySelector('.arrow-move');\r\n        arrow.innerHTML = detailRow.classList.contains('hidden') ? '<img src=\"/img/right-arrow-t.svg\" alt=\"image\">' : '<img src=\"/img/down-arrow-t.svg\" alt=\"image\">';\r\n        }\r\n        });\r\n        });\r\n        // Function to toggle arrow icon\r\n        function toggleArrow(icon) {\r\n        var currentSrc = icon.getAttribute('src');\r\n        if (currentSrc.includes('down-arrow-t.svg')) {\r\n        icon.setAttribute('src', '/img/right-arrow-t.svg');\r\n        } else {\r\n        icon.setAttribute('src', '/img/down-arrow-t.svg');\r\n        }\r\n        }\r\n        document.querySelectorAll('.across-eight-key a[href^=\"#\"]').forEach(function(anchor) {\r\n        anchor.addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        var targetId = this.getAttribute('href').substring(1);\r\n        var targetElement = document.getElementById(targetId);\r\n        if (targetElement) {\r\n        var allDetailRows = document.querySelectorAll('.tier-details');\r\n        allDetailRows.forEach(function(row) {\r\n        if (row !== targetElement) {\r\n        row.classList.add('hidden');\r\n        }\r\n        });\r\n        targetElement.classList.toggle('hidden');\r\n        setTimeout(function() {\r\n        window.scroll({\r\n        top: targetElement.getBoundingClientRect().top + window.scrollY - 250,\r\n        behavior: 'smooth'\r\n        });\r\n        }, 100); // Delay added for smooth scrolling\r\n        // Toggle arrow icon\r\n        var icon = document.getElementById(targetId).previousElementSibling.querySelector('.arrow-move img');\r\n        toggleArrow(icon);\r\n        // Reset other arrow icons\r\n        var allArrowIcons = document.querySelectorAll('.arrow-move img');\r\n        allArrowIcons.forEach(function(arrowIcon) {\r\n        if (arrowIcon !== icon) {\r\n        var otherSrc = arrowIcon.getAttribute('src');\r\n        if (otherSrc.includes('down-arrow-t.svg')) {\r\n        arrowIcon.setAttribute('src', '/img/right-arrow-t.svg');\r\n        }\r\n        }\r\n        });\r\n        }\r\n        });\r\n        });\r\n        // Show default-open row\r\n        document.querySelectorAll('.default-open').forEach(function(row) {\r\n        row.classList.remove('hidden');\r\n        row.previousElementSibling.querySelector('.arrow-move').innerHTML = '<img src=\"/img/down-arrow-t.svg\" alt=\"image\">';\r\n        });\r\n        // document.addEventListener('DOMContentLoaded', function() {\r\n        // const sourceContent = document.querySelector('.source-content');\r\n        // const destinationClone = document.querySelector('.destination-clone');\r\n        // function cloneContent() {\r\n        // destinationClone.innerHTML = sourceContent.innerHTML;\r\n        // }\r\n        // cloneContent();\r\n        // });\r\n\r\n        \r\n        //Highlights from Each Country’s Ranking\r\n    // document.addEventListener('DOMContentLoaded', function () {\r\n    // const commonTabButtons = document.querySelectorAll('.common-tab-button');\r\n    // const commonTabContents = document.querySelectorAll('.common-tab-content');\r\n    // const commonTabContainer = document.querySelector('.common-tab-container');\r\n    // if (!commonTabContainer) {\r\n    //     console.warn(\"Warning: '.common-tab-container' not found. Skipping tab script.\");\r\n    //     return; // Stop execution if the container doesn't exist\r\n    // }\r\n    // const commonTabDropdown = document.createElement('select');\r\n    // commonTabDropdown.id = 'tabDropdown';\r\n    // commonTabButtons.forEach(button => {\r\n    // const option = document.createElement('option');\r\n    // option.value = button.getAttribute('data-tab');\r\n    // option.textContent = button.textContent;\r\n    // commonTabDropdown.appendChild(option);\r\n    // });\r\n    // commonTabContainer.insertBefore(commonTabDropdown, commonTabContents[0]);\r\n    // function showTabContent(commonTabId) {\r\n    // commonTabContents.forEach(content => content.style.display = 'none');\r\n    // document.getElementById(commonTabId).style.display = 'block';\r\n    // commonTabButtons.forEach(button => button.classList.remove('active'));\r\n    // document.querySelector(`.common-tab-button[data-tab=\"${commonTabId}\"]`).classList.add('active');\r\n    // }\r\n    // commonTabButtons.forEach(button => {\r\n    // button.addEventListener('click', function () {\r\n    // const commonTabId = this.getAttribute('data-tab');\r\n    // showTabContent(commonTabId);\r\n    // commonTabDropdown.value = commonTabId;\r\n    // });\r\n    // });\r\n    // commonTabDropdown.addEventListener('change', function () {\r\n    // const commonTabId = this.value;\r\n    // showTabContent(commonTabId);\r\n    // });\r\n    // showTabContent('dectabB');\r\n    // });\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n    document.querySelectorAll('.common-tab-container').forEach(container => {\r\n        const tabButtons = container.querySelectorAll('.common-tab-button');\r\n        const tabContents = container.querySelectorAll('.common-tab-content');\r\n\r\n        if (!tabButtons.length || !tabContents.length) return;\r\n\r\n        // Create dropdown\r\n        const dropdown = document.createElement('select');\r\n        dropdown.classList.add('tab-dropdown');\r\n\r\n        tabButtons.forEach(button => {\r\n            const option = document.createElement('option');\r\n            option.value = button.getAttribute('data-tab');\r\n            option.textContent = button.textContent;\r\n            dropdown.appendChild(option);\r\n        });\r\n\r\n        container.insertBefore(dropdown, tabContents[0]);\r\n\r\n        function showTab(tabId) {\r\n            tabContents.forEach(content => content.style.display = 'none');\r\n            const target = container.querySelector(`#${tabId}`);\r\n            if (target) target.style.display = 'block';\r\n\r\n            tabButtons.forEach(button => button.classList.remove('active'));\r\n            const activeButton = container.querySelector(`.common-tab-button[data-tab=\"${tabId}\"]`);\r\n            if (activeButton) activeButton.classList.add('active');\r\n\r\n            dropdown.value = tabId;\r\n        }\r\n\r\n        // Event listeners\r\n        tabButtons.forEach(button => {\r\n            button.addEventListener('click', () => {\r\n                showTab(button.getAttribute('data-tab'));\r\n            });\r\n        });\r\n\r\n        dropdown.addEventListener('change', () => {\r\n            showTab(dropdown.value);\r\n        });\r\n\r\n        // Determine the default tab\r\n        const defaultButton = container.querySelector('.common-tab-button[data-default=\"true\"]') ||\r\n                              container.querySelector('.common-tab-button.active') ||\r\n                              tabButtons[0];\r\n        const defaultTabId = defaultButton.getAttribute('data-tab');\r\n\r\n        showTab(defaultTabId);\r\n    });\r\n});\r\n"]}