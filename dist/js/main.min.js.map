{"version":3,"sources":["main.js","helpers.js","mega-menu.js","auto rotate-tab.js","carousel.js","tabs.js"],"names":["showRegionalOffice","selectedValue","document","getElementById","value","querySelectorAll","forEach","div","classList","add","selectedOffice","querySelector","concat","toLowerCase","remove","openPopupById","id","_document$getElementB2","addEventListener","dropdownLinks","activateCountry","link","l","imgSelector","getAttribute","newImgSrc","img","src","showSelector","content","target","e","preventDefault","firstLink","tabs","tabContents","length","tab","t","parentElement","tabSelector","this","activeTabContent","glideElement","glideId","initGlide","el","targetSelector","dataset","imagechangehover","newImg","btn","imgEl","newSrc","targetImg","setTimeout","onload","toggleButton","menu","options","toggle","option","selectedText","textContent","console","log","event","contains","accordion","autoClose","button","targetPanel","bsTarget","isOpen","accordionItem","closest","panel","setAttribute","icon","String","arrowIcon","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","type","perPage","parseInt","autoplay","pagination","arrows","pauseOnHover","interval","rewind","breakpoints","JSON","parse","warn","splide","Splide","mount","innerEl","Components","Autoplay","pause","play","wrapper","currentIndex","totalCount","progressFill","updateProgress","index","total","toString","padStart","percent","style","width","on","slideIndex","carousel","slides","slide","display","dropdowns","dropdown","stopPropagation","d","rect","spaceBelow","innerHeight","bottom","spaceAbove","scrollHeight","dots","moreText","counters","countersStarted","observer","IntersectionObserver","entries","entry","isIntersecting","counter","hasPlus","duration","startTime","performance","now","requestAnimationFrame","updateCounter","currentTime","elapsed","progress","Math","min","floor","innerText","unobserve","threshold","counterSection","observe","container","video","state","hasAttribute","timeout","hideControls","showControls","clearTimeout","startAutoHideControls","ended","anchor","contentDiv","trigger","_document$getElementB","popup","scrollTriggered","toggle_visibility","element","toggle_modal","toggle_class","myclass","toggle_class_trigger","scrollY","exploreLink","exploreContent","closeBtn","arrowRotate","targetClass","modal","poster","radio","label","checked","autoChangeInterval","tabLink","tabContent","tabContentInner","currentTabIndex","changeTab","clearActive","fadeIn","fadeOutAndIn","opacity","fadeOut","tags","tag","clearInterval","tabLinkIndex","i","getContentIndex","addClassToContent","contentInner","setInterval","innerWidth","tabParent","tabItem","item","activeContent","tabClone","cloneNode","insertAdjacentElement","glideElementsExplore","call","glideItem","glideClass","className","split","join","perView","Glide","bound","indicatorsContainer","items","startX","goToItem","carouselWidth","offsetWidth","offset","transform","indicator","createElement","appendChild","touches","clientX","passive","endX","diffX","abs","Array","from","findIndex","goToNextItem","goToPrevItem","activateTab","section","mgtabRel","megatabs","megaMtabContents","megaMtabHeadings","mgtab","heading","openService","serviceFocus","servicetabcontent","getElementsByClassName","servicetablinks","currentTarget","click","sectionId","firstTab","activateFirstTab","span","c","h","block","links","subheadingText","megaMenu","navbar__menu","clearMegaMenu","navItem","toggleMenu","relatedTarget","parentNode","twice","aToggle","accordionState","accordionItems","toggleAccordion","toggleItem","mobileNavItems","navbar__iconmenu","iconItems","iconItem","clearIconMenu","checkTwice","openItem","resetCount","toggleArrow","includes","detailRow","nextElementSibling","allDetailRows","row","innerHTML","targetId","substring","targetElement","scroll","previousElementSibling","tabButtons","insertBefore","showTab","tabId","activeButton"],"mappings":"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","file":"main.min.js","sourcesContent":["// import 'components/mega-menu.js';\r\n// import 'components/carousel.js';\r\n// import 'components/popup.js';\r\n// import 'utilities/helpers.js';\r\n","//hope page service section\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const dropdownLinks = document.querySelectorAll('.toggleBtn-dropdown-menu a');\r\n\r\n  function activateCountry(link) {\r\n   \r\n    dropdownLinks.forEach(l => l.classList.remove('active'));\r\n    link.classList.add('active');\r\n\r\n\r\n    const imgSelector = link.getAttribute('data-imagechangeclick');\r\n    const newImgSrc = link.getAttribute('data-img');\r\n    if (imgSelector && newImgSrc) {\r\n      const img = document.querySelector(imgSelector);\r\n      if (img) img.src = newImgSrc;\r\n    }\r\n\r\n   \r\n    const showSelector = link.getAttribute('datashowonclick');\r\n    const allContents = document.querySelectorAll('.service-left');\r\n    allContents.forEach(content => content.classList.remove('show'));\r\n\r\n    if (showSelector) {\r\n      const target = document.querySelector(showSelector);\r\n      if (target) target.classList.add('show');\r\n    }\r\n\r\n\r\n    // const cta = document.querySelector('.text-cta-link');\r\n    // const countryName = link.textContent.trim();\r\n    // if (cta) cta.innerHTML = `Connect with a ${countryName} Expert <span class=\"arrow-anim\"></span>`;\r\n  }\r\n\r\n\r\n  dropdownLinks.forEach(link => {\r\n    link.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      activateCountry(link);\r\n    });\r\n  });\r\n\r\n \r\n  const firstLink = dropdownLinks[0];\r\n  if (firstLink) {\r\n    activateCountry(firstLink);\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  /** Pricing Tabs */\r\n  const tabs = document.querySelectorAll('.pricing__tab--country li a');\r\n  const tabContents = document.querySelectorAll('.pricing__country');\r\n\r\n  if (tabs.length > 0 && tabContents.length > 0) {\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        tabs.forEach(t => t.parentElement.classList.remove('tab--active'));\r\n        tabContents.forEach(content => content.classList.remove('pricing--active'));\r\n\r\n        tab.parentElement.classList.add('tab--active');\r\n\r\n        const tabSelector = this.getAttribute('data-tab');\r\n        if (tabSelector) {\r\n          const activeTabContent = document.querySelector(tabSelector);\r\n          if (activeTabContent) {\r\n            activeTabContent.classList.add('pricing--active');\r\n\r\n            const glideElement = activeTabContent.querySelector('.glide');\r\n            if (glideElement) {\r\n              const glideId = glideElement.getAttribute('id');\r\n              if (glideId) {\r\n                initGlide(`#${glideId}`);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n     // change image on hover card-btn\r\n     document.querySelectorAll('[data-imageChangeHover]').forEach(el => {\r\n      const targetSelector = el.dataset.imagechangehover;\r\n      const newImg = el.dataset.img;\r\n      el.addEventListener('mouseenter', () => {\r\n        document.querySelectorAll('.card-btn').forEach(btn => btn.classList.remove('active'));\r\n        el.classList.add('active');\r\n        const targetImg = document.querySelector(targetSelector);\r\n        if (targetImg && newImg) {\r\n          fadeImageChange(targetImg, newImg);\r\n        }\r\n      });\r\n    });\r\n    \r\n    function fadeImageChange(imgEl, newSrc) {\r\n      imgEl.classList.add('fade-out');\r\n      setTimeout(() => {\r\n        imgEl.src = newSrc;\r\n        imgEl.onload = () => imgEl.classList.remove('fade-out');\r\n      }, 150);\r\n    }\r\n  /** Insights Resources Toggle */\r\n  const toggleButton = document.querySelector(\".insights-resources__toggle\");\r\n  const menu = document.querySelector(\".insights-resources__menu\");\r\n\r\n  if (toggleButton && menu) {\r\n    const options = menu.querySelectorAll(\"li\");\r\n\r\n    toggleButton.addEventListener(\"click\", function () {\r\n      menu.classList.toggle(\"show\");\r\n    });\r\n\r\n    options.forEach(option => {\r\n      option.addEventListener(\"click\", function () {\r\n        const selectedText = this.textContent;\r\n        const selectedValue = this.getAttribute(\"data-value\");\r\n        if (selectedText) {\r\n          toggleButton.textContent = selectedText;\r\n        }\r\n        menu.classList.remove(\"show\");\r\n        console.log(`Selected value: ${selectedValue}`);\r\n      });\r\n    });\r\n\r\n    document.addEventListener(\"click\", function (event) {\r\n      if (!toggleButton.contains(event.target) && !menu.contains(event.target)) {\r\n        menu.classList.remove(\"show\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Accordion Regular */\r\n  document.querySelectorAll('.accordion-reg').forEach(accordion => {\r\n    const autoClose = accordion.getAttribute('data-autoClose') !== 'false';\r\n\r\n    accordion.querySelectorAll('.accordion-reg-button').forEach(button => {\r\n      button.addEventListener('click', function () {\r\n        const targetPanel = document.querySelector(this.dataset.bsTarget);\r\n        const isOpen = targetPanel.classList.contains(\"show\");\r\n        const accordionItem = this.closest('.accordion-reg-item');\r\n\r\n        if (autoClose) {\r\n          accordion.querySelectorAll('.accordion-reg-collapse').forEach(panel => {\r\n            if (panel !== targetPanel) {\r\n              panel.classList.remove(\"show\");\r\n\r\n              const btn = accordion.querySelector(`[data-bs-target=\"#${panel.id}\"]`);\r\n              if (btn) btn.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n              const icon = btn?.querySelector(\".arrow\");\r\n              if (icon) icon.classList.remove(\"rotate\");\r\n            }\r\n          });\r\n        }\r\n\r\n        targetPanel.classList.toggle(\"show\");\r\n        this.setAttribute(\"aria-expanded\", String(!isOpen));\r\n\r\n        const arrowIcon = this.querySelector(\".arrow\");\r\n        if (arrowIcon) {\r\n          arrowIcon.classList.toggle(\"rotate\", !isOpen);\r\n        }\r\n\r\n        if (!isOpen) {\r\n          const yOffset = -100;\r\n          const y = accordionItem.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n          window.scrollTo({ top: y, behavior: \"smooth\" });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  /** Home Top Banner Splide Slider */\r\n  // document.querySelectorAll('.splide').forEach(el => {\r\n  //   const options = {\r\n  //     perPage: parseInt(el.dataset.perPage) || 1,\r\n  //     type: el.dataset.type || 'loop',\r\n  //     autoplay: el.dataset.autoplay === 'true',\r\n  //     pagination: el.dataset.pagination !== 'false',\r\n  //     rewind: el.dataset.rewind === 'true',\r\n  //     arrows: el.dataset.arrows !== 'false',\r\n  //   };\r\n  //   if (el.dataset.breakpoints) {\r\n  //     try {\r\n  //       options.breakpoints = JSON.parse(el.dataset.breakpoints);\r\n  //     } catch (e) {\r\n  //       console.warn('Invalid breakpoints JSON for', el, e);\r\n  //     }\r\n  //   }\r\n  //   new Splide(el, options).mount();\r\n  // });\r\n  \r\n  // document.querySelectorAll('.splide').forEach(el => {\r\n  //   const type = el.dataset.type || 'loop';\r\n  \r\n  //   const options = {\r\n  //     perPage: parseInt(el.dataset.perPage) || 1,\r\n  //     type: type,\r\n  //     autoplay: el.dataset.autoplay === 'true',\r\n  //     pagination: el.dataset.pagination !== 'false',\r\n  //     arrows: el.dataset.arrows !== 'false',\r\n  //     pauseOnHover: false,\r\n  //     interval: parseInt(el.dataset.interval) || 5000, // Default to 3000ms (3 seconds)\r\n  //   };\r\n  \r\n  //   // Only include rewind if not using loop\r\n  //   if (type !== 'loop') {\r\n  //     options.rewind = el.dataset.rewind === 'true';\r\n  //   }\r\n  \r\n  //   if (el.dataset.breakpoints) {\r\n  //     try {\r\n  //       options.breakpoints = JSON.parse(el.dataset.breakpoints);\r\n  //     } catch (e) {\r\n  //       console.warn('Invalid breakpoints JSON for', el, e);\r\n  //     }\r\n  //   }\r\n  \r\n  //   const splide = new Splide(el, options);\r\n  //   splide.mount();\r\n  \r\n  //   // Pause/play autoplay on specific inner elements only\r\n  //   el.querySelectorAll('.slider-content, .trending-insights').forEach(innerEl => {\r\n  //     innerEl.addEventListener('mouseenter', () => {\r\n  //       if (splide.Components.Autoplay) {\r\n  //         splide.Components.Autoplay.pause();\r\n  //       }\r\n  //     });\r\n  //     innerEl.addEventListener('mouseleave', () => {\r\n  //       if (splide.Components.Autoplay) {\r\n  //         splide.Components.Autoplay.play();\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // });\r\n  \r\n  document.querySelectorAll('.splide').forEach(el => {\r\n  const type = el.dataset.type || 'loop';\r\n\r\n  const options = {\r\n    perPage: parseInt(el.dataset.perPage) || 1,\r\n    type: type,\r\n    autoplay: el.dataset.autoplay === 'true',\r\n    pagination: el.dataset.pagination !== 'false',\r\n    arrows: el.dataset.arrows !== 'false',\r\n    pauseOnHover: false,\r\n    interval: parseInt(el.dataset.interval) || 5000,\r\n  };\r\n\r\n  if (type !== 'loop') {\r\n    options.rewind = el.dataset.rewind === 'true';\r\n  }\r\n\r\n  if (el.dataset.breakpoints) {\r\n    try {\r\n      options.breakpoints = JSON.parse(el.dataset.breakpoints);\r\n    } catch (e) {\r\n      console.warn('Invalid breakpoints JSON for', el, e);\r\n    }\r\n  }\r\n\r\n  const splide = new Splide(el, options);\r\n  splide.mount();\r\n\r\n  // Autoplay pause on hover inside slider-content and trending-insights\r\n  el.querySelectorAll('.slider-content, .trending-insights').forEach(innerEl => {\r\n    innerEl.addEventListener('mouseenter', () => {\r\n      if (splide.Components.Autoplay) {\r\n        splide.Components.Autoplay.pause();\r\n      }\r\n    });\r\n    innerEl.addEventListener('mouseleave', () => {\r\n      if (splide.Components.Autoplay) {\r\n        splide.Components.Autoplay.play();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Custom Progress bar and counter\r\n  const wrapper = el.parentElement.querySelector('.splide-progress-wrapper');\r\n  const currentIndex = wrapper?.querySelector('.current-index');\r\n  const totalCount = wrapper?.querySelector('.total-count');\r\n  const progressFill = wrapper?.querySelector('.progress-fill');\r\n\r\n  if (wrapper && currentIndex && totalCount && progressFill) {\r\n    const updateProgress = () => {\r\n      const index = splide.index + 1;\r\n      const total = splide.length;\r\n\r\n      currentIndex.textContent = index.toString().padStart(2, '0');\r\n      totalCount.textContent = total.toString().padStart(2, '0');\r\n\r\n      const percent = ((index - 0) / (total - 0)) * 100;\r\n      progressFill.style.width = `${percent}%`;\r\n    };\r\n\r\n    splide.on('mounted move', updateProgress);\r\n    updateProgress(); \r\n  }\r\n});\r\n\r\n  /** Logo Slides (Our Brands Page) */\r\n  let slideIndex = 0;\r\n  function carousel() {\r\n    const slides = document.querySelectorAll(\".LogoSlides\");\r\n\r\n    if (slides.length === 0) return; \r\n\r\n    slides.forEach(slide => {\r\n      slide.style.display = \"none\";\r\n    });\r\n\r\n    slideIndex++;\r\n    if (slideIndex > slides.length) {\r\n      slideIndex = 1;\r\n    }\r\n\r\n    slides[slideIndex - 1].style.display = \"block\";\r\n\r\n    setTimeout(carousel, 9000);\r\n  }\r\n  carousel();\r\n\r\n  /** Toggle Dropdown in Home Service Section */\r\n  const dropdowns = document.querySelectorAll('.toggleBtn-dropdown');\r\n\r\n  dropdowns.forEach(dropdown => {\r\n    const button = dropdown.querySelector('.toggleBtn-dropdown-button');\r\n    const menu = dropdown.querySelector('.toggleBtn-dropdown-menu');\r\n\r\n    button.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n\r\n      dropdowns.forEach(d => {\r\n        if (d !== dropdown) d.classList.remove('open', 'drop-up');\r\n      });\r\n\r\n      dropdown.classList.toggle('open');\r\n\r\n      if (dropdown.classList.contains('open')) {\r\n        const rect = menu.getBoundingClientRect();\r\n        const spaceBelow = window.innerHeight - rect.bottom;\r\n        const spaceAbove = rect.top;\r\n        const requiredHeight = menu.scrollHeight;\r\n\r\n        if (spaceBelow < requiredHeight && spaceAbove > spaceBelow) {\r\n          dropdown.classList.add('drop-up');\r\n        } else {\r\n          dropdown.classList.remove('drop-up');\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  window.addEventListener('click', () => {\r\n    dropdowns.forEach(d => d.classList.remove('open', 'drop-up'));\r\n  });\r\n\r\n  /** Toggle Expand Section for Trending Insights */\r\n  document.querySelectorAll('.expand-toggle').forEach((btn) => {\r\n    btn.addEventListener('click', () => {\r\n      const expander = btn.closest('.expand-sect');\r\n      const content = expander.querySelector('.expand-content');\r\n      const icon = btn.querySelector('.icon');\r\n\r\n      content.classList.toggle('open');\r\n      icon.textContent = content.classList.contains('open') ? '−' : '+';\r\n    });\r\n  });\r\n\r\n  /** Toggle Read More Text on Asia Manufacturing Index */\r\n  document.querySelectorAll('.toggle-btnls').forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const content = this.parentElement;\r\n      const dots = content.querySelector('.dots');\r\n      const moreTexts = content.querySelectorAll('.more-text');\r\n\r\n      moreTexts.forEach(moreText => {\r\n        if (moreText.style.display === \"none\" || moreText.style.display === \"\") {\r\n          moreText.style.display = \"block\";\r\n          dots.style.display = \"none\";\r\n          button.textContent = \"-less\";\r\n        } else {\r\n          moreText.style.display = \"none\";\r\n          dots.style.display = \"none\";\r\n          button.textContent = \"Read full summary\";\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  /** Counter Animation in Home Who We Are Section */\r\n  const counters = document.querySelectorAll('.counter');\r\n  let countersStarted = false;\r\n  \r\n  function startCounters() {\r\n    counters.forEach(counter => {\r\n      const target = +counter.getAttribute('data-target');\r\n      const hasPlus = counter.getAttribute('data-plus') === \"true\";\r\n      const duration = +counter.getAttribute('data-speed') || 2000; // Duration in ms\r\n  \r\n      const startTime = performance.now();\r\n  \r\n      function updateCounter(currentTime) {\r\n        const elapsed = currentTime - startTime;\r\n        const progress = Math.min(elapsed / duration, 1); // Clamp to 1\r\n        const value = Math.floor(progress * target);\r\n  \r\n        counter.innerText = hasPlus ? `${value}+` : `${value}`;\r\n  \r\n        if (progress < 1) {\r\n          requestAnimationFrame(updateCounter);\r\n        } else {\r\n          counter.innerText = hasPlus ? `${target}+` : `${target}`;\r\n        }\r\n      }\r\n  \r\n      requestAnimationFrame(updateCounter);\r\n    });\r\n  }\r\n  \r\n  const observerOptions = {\r\n    threshold: 0.4\r\n  };\r\n  \r\n  const observer = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting && !countersStarted) {\r\n        startCounters();\r\n        countersStarted = true;\r\n        observer.unobserve(entry.target);\r\n      }\r\n    });\r\n  }, observerOptions);\r\n  \r\n  const counterSection = document.querySelector('.counter-section');\r\n  if (counterSection) {\r\n    observer.observe(counterSection);\r\n  }\r\n  \r\n  \r\n\r\n  /** Home Video Who We Are Section\r\n  const container = document.querySelector(\".video-container\");\r\n  if (container) {\r\n    const video = container.querySelector(\"video\");\r\n    const overlay = container.querySelector(\".video-overlay\");\r\n\r\n    container.addEventListener(\"click\", () => {\r\n      if (container.dataset.state === \"initial\") {\r\n        video.setAttribute(\"controls\", true);\r\n        video.play();\r\n        container.dataset.state = \"playing\";\r\n        startAutoHideControls();\r\n      }\r\n    });\r\n\r\n    video.addEventListener(\"pause\", () => {\r\n      if (container.dataset.state === \"playing\" && container.hasAttribute(\"data-no-pause\") && !video.ended) {\r\n        video.play();\r\n      }\r\n    });\r\n\r\n    function startAutoHideControls() {\r\n      if (!container.hasAttribute(\"data-autohide\")) return;\r\n\r\n      let timeout;\r\n      const hideControls = () => {\r\n        video.classList.add(\"hide-controls\");\r\n      };\r\n      const showControls = () => {\r\n        video.classList.remove(\"hide-controls\");\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(hideControls, 3000);\r\n      };\r\n\r\n      video.addEventListener(\"mousemove\", showControls);\r\n      video.addEventListener(\"touchstart\", showControls);\r\n      timeout = setTimeout(hideControls, 3000);\r\n    }\r\n  }*/\r\n\r\n\r\n  document.querySelectorAll(\".video-container\").forEach(container => {\r\n    const video = container.querySelector(\"video\");\r\n    const overlay = container.querySelector(\".video-overlay\");\r\n\r\n    container.addEventListener(\"click\", () => {\r\n  if (container.dataset.state === \"initial\") {\r\n    video.setAttribute(\"controls\", true);\r\n    video.play();\r\n    container.dataset.state = \"playing\";\r\n    startAutoHideControls(video, container); // this is fine to keep\r\n  }\r\n});\r\n\r\n    // Prevent pausing if needed\r\n    video.addEventListener(\"pause\", () => {\r\n      if (\r\n        container.dataset.state === \"playing\" &&\r\n        container.hasAttribute(\"data-no-pause\") &&\r\n        !video.ended\r\n      ) {\r\n        video.play();\r\n      }\r\n    });\r\n  });\r\n\r\n  function enterFullscreen(el) {\r\n    if (el.requestFullscreen) el.requestFullscreen();\r\n    else if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\r\n    else if (el.msRequestFullscreen) el.msRequestFullscreen();\r\n  }\r\n\r\n  function startAutoHideControls(video, container) {\r\n    if (!container.hasAttribute(\"data-autohide\")) return;\r\n\r\n    let timeout;\r\n    const hideControls = () => video.classList.add(\"hide-controls\");\r\n    const showControls = () => {\r\n      video.classList.remove(\"hide-controls\");\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(hideControls, 3000);\r\n    };\r\n\r\n    video.addEventListener(\"mousemove\", showControls);\r\n    video.addEventListener(\"touchstart\", showControls);\r\n    timeout = setTimeout(hideControls, 3000);\r\n  }\r\n});\r\n\r\n/** Article Read More Toggle (outside DOMContentLoaded) */\r\ndocument.querySelectorAll(\"a[data-togglearticle]\").forEach(anchor => {\r\n  anchor.addEventListener('click', function (e) {\r\n    e.preventDefault();\r\n    const contentDiv = document.getElementById(this.getAttribute(\"data-togglearticle\"));\r\n    if (contentDiv) {\r\n      contentDiv.classList.toggle(\"d-none\");\r\n      this.innerText = this.innerText === 'more+' ? 'less-' : 'more+';\r\n    }\r\n  });\r\n});\r\n\r\n/** Show Regional Office (outside DOMContentLoaded) */\r\nfunction showRegionalOffice() {\r\n  const selectedValue = document.getElementById(\"RegionaltS\").value;\r\n  document.querySelectorAll(\".regional-office > div\").forEach(div => {\r\n    div.classList.add(\"regional-hidden\");\r\n  });\r\n  if (selectedValue !== \"Select the office\") {\r\n    const selectedOffice = document.querySelector(`.regional-office-${selectedValue.toLowerCase()}`);\r\n    if (selectedOffice) {\r\n      selectedOffice.classList.remove(\"regional-hidden\");\r\n    }\r\n  }\r\n}\r\n\r\n      // Open popup on click\r\n      document.querySelectorAll('[data-popup]').forEach(trigger => {\r\n        trigger.addEventListener('click', e => {\r\n          e.preventDefault();\r\n          const id = trigger.getAttribute('data-popup');\r\n          document.getElementById(id)?.classList.add('active');\r\n        });\r\n      });\r\n  \r\n      // Close popup\r\n      document.querySelectorAll('.popup-overlay').forEach(popup => {\r\n        popup.addEventListener('click', e => {\r\n          if (e.target === popup || e.target.classList.contains('popup-close')) {\r\n            popup.classList.remove('active');\r\n          }\r\n        });\r\n      });\r\n  \r\n      // Open dynamically\r\n      function openPopupById(id) {\r\n        document.getElementById(id)?.classList.add('active');\r\n      }\r\n      // Open the popup after 3 seconds\r\n          setTimeout(() => {\r\n          openPopupById('dynamic-popup');\r\n          }, 3000);\r\n  \r\n  \r\n      // Scroll-based popup trigger\r\n      let scrollTriggered = false;\r\n      window.addEventListener('scroll', () => {\r\n        if (!scrollTriggered && window.scrollY > 500) {\r\n          openPopupById('scroll-popup');\r\n          scrollTriggered = true;\r\n        }\r\n      });\r\n  // on click expand div\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n    const exploreLink = document.querySelector('.text-cta-expnd');\r\n    const exploreContent = document.querySelector('.explore-content');\r\n    const closeBtn = document.querySelector('.explore-close');\r\n  \r\n    // Only attempt to find .arrow-anim *inside* exploreLink if it exists\r\n    const arrowRotate = exploreLink?.querySelector('.arrow-anim');\r\n  \r\n    if (exploreLink && exploreContent && closeBtn && arrowRotate) {\r\n      exploreLink.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        exploreContent.classList.add('show');\r\n        arrowRotate.classList.add('arrow-rotate');\r\n      });\r\n  \r\n      closeBtn.addEventListener('click', function () {\r\n        exploreContent.classList.remove('show');\r\n        arrowRotate.classList.remove('arrow-rotate');\r\n      });\r\n    } else {\r\n      console.warn('One or more required elements were not found in the DOM.');\r\n      console.log({ exploreLink, exploreContent, closeBtn, arrowRotate });\r\n    }\r\n//get-in-touch\r\nconst buttons = document.querySelectorAll(\"[data-show-on-click]\");\r\n\r\n  buttons.forEach((button) => {\r\n    const targetClass = button.getAttribute(\"data-show-on-click\");\r\n\r\n    button.addEventListener(\"click\", function () {\r\n      const target = document.querySelector(`.${targetClass}`);\r\n      if (!target) return;\r\n\r\n      const isVisible = target.style.display === \"block\";\r\n\r\n      if (isVisible) {\r\n        target.style.display = \"none\";\r\n      } else {\r\n        target.style.display = \"block\";\r\n\r\n        // Scroll to element with 172px offset from top\r\n        const elementTop = target.getBoundingClientRect().top + window.pageYOffset;\r\n        const scrollTo = elementTop - 85;\r\n\r\n        window.scrollTo({\r\n          top: scrollTo,\r\n          behavior: \"smooth\"\r\n        });\r\n      }\r\n    });\r\n  });\r\n    //video popup controll\r\nconst modal = document.getElementById(\"center-popup\");\r\nconst popupCloseBtn = modal ? modal.querySelector(\".popup-close\") : null;\r\nconst video = document.getElementById(\"eventVideo\");\r\n\r\n\r\ndocument.querySelectorAll('.event-video-item').forEach(trigger => {\r\n  trigger.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    video.src = trigger.getAttribute(\"src\");\r\n    video.poster = trigger.getAttribute(\"data-cover\");\r\n    modal.classList.add('active');\r\n  });\r\n});\r\n\r\n\r\n// modal.addEventListener(\"click\", function(e) {\r\n//   if (e.target === modal || e.target.classList.contains(\"popup-close\")) {\r\n//     modal.classList.remove(\"active\");\r\n//     video.pause();\r\n//     video.currentTime = 0; \r\n//   }\r\n// });\r\n\r\n\r\nif (modal) {\r\n  modal.addEventListener(\"click\", function (e) {\r\n    if (e.target === modal || e.target.classList.contains(\"popup-close\")) {\r\n      modal.classList.remove(\"active\");\r\n      video.pause();\r\n      video.currentTime = 0;\r\n    }\r\n  });\r\n}\r\n//location page\r\n\r\n  // const imageCards = document.querySelectorAll(\"[data-show-on-click]\");\r\n  // imageCards.forEach(card => {\r\n  //   card.addEventListener(\"click\", () => {\r\n  //     const targetId = card.getAttribute(\"data-show-on-click\");\r\n  //     const target = document.getElementById(targetId);\r\n  //     document.querySelectorAll(\".location-card-mian\").forEach(loc => {\r\n  //       loc.classList.remove(\"show\");\r\n  //     });\r\n  //     if (target) {\r\n  //       target.classList.add(\"show\");\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  //  const imageCards = document.querySelectorAll(\"[data-show-on-click]\");\r\n  // imageCards.forEach(card => {\r\n  //   card.addEventListener(\"click\", () => {\r\n  //     const targetId = card.getAttribute(\"data-show-on-click\");\r\n  //     const target = document.getElementById(targetId);\r\n  //     document.querySelectorAll(\".location-card-mian\").forEach(loc => {\r\n  //       loc.classList.remove(\"show\");\r\n  //     });\r\n  //     imageCards.forEach(c => c.classList.remove(\"selected\"));\r\n  //     if (target) {\r\n  //       target.classList.add(\"show\");\r\n  //       card.classList.add(\"selected\");\r\n  //     }\r\n  //   });\r\n  // });\r\n  });\r\n\r\n  //Radio button select on location and personnel\r\n    document.querySelectorAll('.custom-radio input[type=\"radio\"]').forEach(radio => {\r\n    radio.addEventListener('change', () => {\r\n      document.querySelectorAll('.custom-radio').forEach(label => {\r\n        label.classList.remove('selected');\r\n      });\r\n      if (radio.checked) {\r\n        radio.closest('.custom-radio').classList.add('selected');\r\n      }\r\n    });\r\n  });\r\n  document.querySelectorAll('.custom-radio input[type=\"radio\"]:checked').forEach(radio => {\r\n    radio.closest('.custom-radio').classList.add('selected');\r\n  });\r\n\r\n  \r\n//home page main slide progess bar with count slide number\r\n//   document.addEventListener('DOMContentLoaded', function () {\r\n//   const splide = new Splide('#main-slider', {\r\n//     type: 'slide', // or 'loop'\r\n//     perPage: 1,\r\n//     pagination: false,\r\n//     arrows: true,\r\n//     autoplay:true,\r\n//     rewind:true,\r\n//   });\r\n\r\n//   const currentIndex = document.querySelector('.current-index');\r\n//   const totalCount = document.querySelector('.total-count');\r\n//   const progressFill = document.querySelector('.progress-fill');\r\n\r\n//   splide.on('mounted move', function () {\r\n//     const index = splide.index + 1;\r\n//     const total = splide.length;\r\n\r\n//     currentIndex.textContent = index.toString().padStart(2, '0');\r\n//     totalCount.textContent = total.toString().padStart(2, '0');\r\n//     const progress = ((index - 1) / (total - 1)) * 100;\r\n//     progressFill.style.width = `${progress}%`;\r\n//   });\r\n\r\n//   splide.mount();\r\n// });","document.addEventListener('DOMContentLoaded', function () {\r\n  // Function to handle service tabs\r\n  window.openService = function (event, serviceFocus) {\r\n      event.stopPropagation();\r\n      var servicetabcontent = document.getElementsByClassName(\"servicetabcontent\");\r\n      var servicetablinks = document.getElementsByClassName(\"servicetablinks\");\r\n\r\n      for (let i = 0; i < servicetabcontent.length; i++) {\r\n          servicetabcontent[i].style.display = \"none\";\r\n      }\r\n      for (let i = 0; i < servicetablinks.length; i++) {\r\n          servicetablinks[i].classList.remove(\"activeservice\");\r\n      }\r\n\r\n      document.getElementById(serviceFocus).style.display = \"flex\";\r\n      event.currentTarget.classList.add(\"activeservice\");\r\n  };\r\n\r\n  // Automatically open the default service tab\r\n  document.getElementById(\"Opendefault\").click();\r\n\r\n  // Function to activate mega menu tabs\r\n  function activateTab(section, mgtabRel) {\r\n      const megatabs = section.querySelectorAll('.mega-mtabs li');\r\n      const megaMtabContents = section.querySelectorAll('.mega-mtab-content');\r\n      const megaMtabHeadings = section.querySelectorAll('.mega-mtab-heading');\r\n\r\n      megatabs.forEach(mgtab => {\r\n          mgtab.classList.toggle('active', mgtab.getAttribute('rel') === mgtabRel);\r\n      });\r\n      megaMtabContents.forEach(content => {\r\n          content.style.display = content.id === mgtabRel ? 'flex' : 'none';\r\n      });\r\n      megaMtabHeadings.forEach(heading => {\r\n          heading.classList.toggle('d_active', heading.getAttribute('rel') === mgtabRel);\r\n      });\r\n  }\r\n\r\n  function activateFirstTab(section) {\r\n      const firstTab = section.querySelector('.mega-mtabs li');\r\n      if (firstTab) {\r\n          firstTab.classList.add('active');\r\n          activateTab(section, firstTab.getAttribute('rel'));\r\n      }\r\n  }\r\n\r\n  function setupSection(sectionId) {\r\n      const section = document.getElementById(sectionId);\r\n      if (!section) return;\r\n\r\n      activateFirstTab(section);\r\n\r\n      section.querySelectorAll('.mega-mtabs li span').forEach(span => {\r\n          span.addEventListener('mouseover', function () {\r\n              activateTab(section, this.parentElement.getAttribute('rel'));\r\n          });\r\n      });\r\n\r\n      section.querySelectorAll('.mega-mtab-heading').forEach(heading => {\r\n          heading.addEventListener('click', function () {\r\n              const content = section.querySelector(`#${this.getAttribute('rel')}`);\r\n              const megaMtabContents = section.querySelectorAll('.mega-mtab-content');\r\n              const megaMtabHeadings = section.querySelectorAll('.mega-mtab-heading');\r\n\r\n              if (content.style.display === 'block') {\r\n                  content.style.display = 'none';\r\n                  this.classList.remove('d_active');\r\n              } else {\r\n                  megaMtabContents.forEach(c => c.style.display = 'none');\r\n                  megaMtabHeadings.forEach(h => h.classList.remove('d_active'));\r\n                  content.style.display = 'block';\r\n                  this.classList.add('d_active');\r\n              }\r\n          });\r\n      });\r\n  }\r\n\r\n  const sections = ['serviceAreas', 'industryFocus', 'resources-section-menu', 'locations-section-menu', 'about-section-menu','events-webinars-menu'];\r\n  sections.forEach(setupSection);\r\n\r\n  // Add hover effect for service page subheading\r\n  const pageSubheading = document.querySelectorAll('.page-link-block');\r\n  pageSubheading.forEach(block => {\r\n      const links = block.querySelectorAll('ul');\r\n      const subheadingText = block.querySelector('.service-page-subheading a');\r\n\r\n      if (subheadingText) {\r\n          links.forEach(link => {\r\n              link.addEventListener('mouseover', () => subheadingText.classList.add('text-black'));\r\n              link.addEventListener('mouseout', () => subheadingText.classList.remove('text-black'));\r\n          });\r\n      }\r\n  });\r\n\r\n  // Mega menu close button\r\n  document.querySelectorAll(\".mega-menu-close-btn\").forEach(closeBtn => {\r\n      closeBtn.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n          let megaMenu = this.closest('.navbar__megamenu');\r\n          if (megaMenu) {\r\n              megaMenu.style.display = 'none';\r\n              setTimeout(() => { megaMenu.style.display = ''; }, 600);\r\n          }\r\n      });\r\n  });\r\n\r\n  // Mega menu toggle\r\n  const navbar__menu = document.querySelector('.navbar__menu');\r\n  const navItems = document.querySelectorAll('ul.navbar__menu > li');\r\n\r\n  navItems.forEach(navItem => {\r\n      navItem.addEventListener('click', function (e) {\r\n          e.stopPropagation();\r\n          clearMegaMenu();\r\n\r\n          let toggleMenu = this.querySelector('.navbar__togglemenu');\r\n          let megaMenu = this.querySelector('.navbar__megamenu');\r\n\r\n          if (toggleMenu && megaMenu) {\r\n              toggleMenu.classList.toggle(\"menu-opened\");\r\n              megaMenu.classList.toggle(\"menu-expanded\");\r\n          }\r\n      });\r\n\r\n      navItem.addEventListener('mouseleave', function (event) {\r\n          var e = event.relatedTarget;\r\n          while (e && e.parentNode && e.parentNode !== window) {\r\n              if (e.parentNode === this || e === this) {\r\n                  return false;\r\n              }\r\n              e = e.parentNode;\r\n          }\r\n      });\r\n  });\r\n\r\n  navbar__menu.addEventListener('mouseleave', function (event) {\r\n      if (!document.querySelector('.navbar').contains(event.relatedTarget)) {\r\n          clearMegaMenu();\r\n          resetTwice();\r\n      }\r\n  });\r\n\r\n  function clearMegaMenu() {\r\n      document.querySelectorAll('.navbar__togglemenu.menu-opened').forEach(btn => {\r\n          btn.classList.remove(\"menu-opened\");\r\n      });\r\n\r\n      document.querySelectorAll('.navbar__megamenu.menu-expanded').forEach(menu => {\r\n          menu.classList.remove(\"menu-expanded\");\r\n      });\r\n  }\r\n\r\n  function clickedTwice(element) {\r\n      let btn = element.children[0];\r\n      btn.dataset.twice = parseInt(btn.dataset.twice || 0, 10) + 1;\r\n\r\n      if (btn.dataset.twice == 2) {\r\n          clearMegaMenu();\r\n          btn.dataset.twice = 0;\r\n      }\r\n  }\r\n\r\n  function resetTwice() {\r\n      document.querySelectorAll('ul.navbar__menu > li > a.navbar__togglemenu').forEach(btn => {\r\n          btn.dataset.twice = 0;\r\n      });\r\n  }\r\n\r\n  \r\n});\r\n\r\n// Helper: Toggle visibility\r\nfunction toggle_visibility(element) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    if(e.style.display == 'block') {\r\n      e.style.display = 'none';\r\n    } else {\r\n      e.style.display = 'block';\r\n    }\r\n  }\r\n}\r\n\r\n// Helper: Toggle modal\r\nfunction toggle_modal(element) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.classList.toggle(\"show-modal\");\r\n  }\r\n}\r\n\r\n// Helper: Toggle a class\r\nfunction toggle_class(element, myclass) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.addEventListener('click', function() {\r\n      this.classList.toggle(myclass)\r\n    })\r\n  }\r\n}\r\n\r\nfunction toggle_class_trigger(element, myclass) {\r\n  var e = document.querySelector(element);\r\n  if (e) {\r\n    e.classList.toggle(myclass)\r\n  }\r\n}\r\n\r\n// Component: Toggle hamburger menu animation\r\ntoggle_class(\".navbar__hamburger\", \"menu-show\");\r\n\r\n// Component: Toggle accordions\r\nif (document.querySelector('.c-accordion') !== null) {\r\n  const accordionItems = document.querySelectorAll(\".c-accordion__title\");\r\n\r\n  function aToggle(e) {\r\n    let target = e.target.className || null;\r\n    let link = this.getAttribute('href');\r\n\r\n    if (target == 'c-accordion__icon' || link == '#') {\r\n      e.preventDefault();\r\n      const accordionState = this.getAttribute('aria-expanded');\r\n\r\n      for (i = 0; i < accordionItems.length; i++) {\r\n        accordionItems[i].setAttribute('aria-expanded', 'false');\r\n      }\r\n\r\n      if (accordionState == 'false') {\r\n        this.setAttribute('aria-expanded', 'true');\r\n      }\r\n    }\r\n  }\r\n\r\n  accordionItems.forEach(item => item.addEventListener('click', aToggle));\r\n};\r\n\r\n// Component: Toggle mobile menu accordion\r\nif (document.querySelector('.navbar__menuwrap') !== null) {\r\n  const mobileNavItems = document.querySelectorAll(\".navbar__togglemenu\");\r\n\r\n  function toggleAccordion() {\r\n    const toggleItem = this.getAttribute('aria-expanded');\r\n    \r\n    for (i = 0; i < mobileNavItems.length; i++) {\r\n      mobileNavItems[i].setAttribute('aria-expanded', 'false');\r\n    }\r\n    \r\n    if (toggleItem == 'false') {\r\n      this.setAttribute('aria-expanded', 'true');\r\n    }\r\n  }\r\n\r\n  if (mobileNavItems.length > 0) {\r\n    mobileNavItems.forEach(item => item.addEventListener('click', toggleAccordion));\r\n  }\r\n}\r\n\r\n// Icon menu\r\nconst navbar__iconmenu = document.querySelector('.navbar__iconmenu');\r\nconst iconItems = document.querySelectorAll('ul.navbar__iconmenu > li > a');\r\n\r\nfor (var i = 0; i <= iconItems.length; i++) {\r\n  let iconItem = iconItems[i];\r\n  if (iconItem && iconItem.hasAttribute(\"data-twice\")) {\r\n    iconItem.addEventListener('click', function(e) {\r\n      clearIconMenu();\r\n      this.classList.toggle(\"menu-opened\");\r\n      checkTwice(this);\r\n    })\r\n  }\r\n}\r\n\r\nnavbar__iconmenu.addEventListener('mouseleave', function (event) {\r\n  clearIconMenu();\r\n  resetCount();\r\n});\r\n    \r\n// Close the menu when clicking outside\r\ndocument.addEventListener('click', function (event) {\r\n  if (!navbar__iconmenu.contains(event.target)) {\r\n    clearIconMenu();\r\n    resetCount();\r\n  }\r\n});\r\n\r\nfunction clearIconMenu() {\r\n  let openItem = document.querySelector('ul.navbar__iconmenu li a.menu-opened');\r\n  if (openItem) {\r\n    openItem.classList.toggle(\"menu-opened\");\r\n  }\r\n}\r\n\r\nfunction checkTwice(element) {\r\n  element.dataset.twice = parseInt(element.dataset.twice, 10) + 1;\r\n  if (element.dataset.twice == 2) {\r\n    clearIconMenu();\r\n    element.dataset.twice = 0;\r\n  }\r\n}\r\nfunction resetCount() {\r\n  let btns = document.querySelectorAll('ul.navbar__iconmenu > li > a[data-twice]');\r\n  btns.forEach(function (btn) {\r\n    btn.dataset.twice = 0;\r\n  });\r\n}\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n    const tabLink = document.querySelectorAll('.c-tab__menu__item');\r\n    const tabContent = document.querySelectorAll('.c-tab__content__item');\r\n    const tabContentInner = document.querySelectorAll('.c-tab__content__inner');\r\n    let currentTabIndex = 0;\r\n    let autoChangeInterval;\r\n\r\n    //console.log(tabLink, tabContent, tabContentInner); // Debugging: Check if elements exist\r\n\r\n    function changeTab(index) {\r\n        if (!tabLink[index] || !tabContent[index] || !tabContentInner[index]) return; // Prevent errors\r\n        clearActive(tabLink);\r\n        clearActive(tabContent);\r\n        tabLink[index].classList.add('c-tab--active');\r\n        tabContent[index].classList.add('c-tab--active');\r\n        fadeIn(tabContentInner[index]);\r\n    }\r\n\r\n    function startAutoChange() {\r\n        if (window.innerWidth < 768) return;\r\n        autoChangeInterval = setInterval(() => {\r\n            currentTabIndex = (currentTabIndex + 1) % tabLink.length;\r\n            fadeOutAndIn();\r\n        }, 4000);\r\n    }\r\n\r\n    function fadeOutAndIn() {\r\n        if (!tabContentInner[currentTabIndex]) return;\r\n        fadeOut(tabContentInner[currentTabIndex]);\r\n        setTimeout(() => {\r\n            changeTab(currentTabIndex);\r\n        }, 500);\r\n    }\r\n\r\n    function fadeIn(element) {\r\n        if (!element) return;\r\n        element.style.opacity = 0;\r\n        element.style.display = 'block';\r\n        setTimeout(() => {\r\n            element.style.opacity = 1;\r\n        }, 50);\r\n    }\r\n\r\n    function fadeOut(element) {\r\n        if (!element) return;\r\n        element.style.opacity = 1;\r\n        setTimeout(() => {\r\n            element.style.opacity = 0;\r\n            element.style.display = 'none';\r\n        }, 500);\r\n    }\r\n\r\n    function getContentIndex(content) {\r\n        for (let i = 0; i < content.length; i++) {\r\n            if (content[i].classList.contains(\"c-tab--active\")) {\r\n                return content[i].dataset.index;\r\n            }\r\n        }\r\n        return -1; // Prevent undefined errors\r\n    }\r\n\r\n    function addClassToContent(index, content, myclass) {\r\n        for (let i = 0; i < content.length; i++) {\r\n            if (content[i].dataset.index == index) {\r\n                content[i].classList.add(myclass);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearActive(tags) {\r\n        tags.forEach(tag => tag.classList.remove(\"c-tab--active\"));\r\n    }\r\n\r\n    // Initialize the first tab on page load\r\n    if (tabLink.length > 0) changeTab(currentTabIndex);\r\n\r\n    tabLink.forEach(link => {\r\n        link.addEventListener('mouseenter', function () {\r\n            clearInterval(autoChangeInterval);\r\n            let tabLinkIndex = this.dataset.index;\r\n            let tabContentIndex = getContentIndex(tabContent);\r\n            if (tabLinkIndex !== tabContentIndex) {\r\n                clearActive(tabLink);\r\n                clearActive(tabContent);\r\n                this.classList.add('c-tab--active');\r\n                addClassToContent(tabLinkIndex, tabContent, 'c-tab--active');\r\n                if (tabContentInner[tabLinkIndex]) fadeIn(tabContentInner[tabLinkIndex]);\r\n            }\r\n        });\r\n\r\n        link.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n        });\r\n    });\r\n\r\n    tabContentInner.forEach(contentInner => {\r\n        contentInner.addEventListener('mouseenter', function () {\r\n            clearInterval(autoChangeInterval);\r\n        });\r\n\r\n        contentInner.addEventListener('mouseleave', function () {\r\n            autoChangeInterval = setInterval(() => {\r\n                currentTabIndex = (currentTabIndex + 1) % tabLink.length;\r\n                fadeOutAndIn();\r\n            }, 4000);\r\n        });\r\n    });\r\n\r\n    // Start auto-change function\r\n    startAutoChange();\r\n\r\n    // Vertical Tabs Handling\r\n    if (document.querySelector('.c-tab--vertical') !== null) {\r\n        const tabLink = document.querySelectorAll('.c-tab__menu__item');\r\n        const tabItem = document.querySelectorAll('.c-tab__content__item');\r\n\r\n        function changeTab(e) {\r\n            e.preventDefault();\r\n            let tabParent = this.parentElement;\r\n            if (!tabParent.classList.contains('c-tab--active')) {\r\n                tabItem.forEach(item => {\r\n                    item.classList.remove(\"c-tab--active\");\r\n                    let contentInner = item.querySelector('.c-tab__content__inner');\r\n                    if (contentInner) {\r\n                        contentInner.style.opacity = 0;\r\n                        contentInner.style.display = 'none';\r\n                    }\r\n                });\r\n\r\n                tabParent.classList.add('c-tab--active');\r\n                let activeContent = tabParent.querySelector('.c-tab__content__inner');\r\n                if (activeContent) {\r\n                    activeContent.style.opacity = 1;\r\n                    activeContent.style.display = 'block';\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < tabLink.length; i++) {\r\n            let tabClone = tabLink[i].cloneNode(true);\r\n            tabClone.classList.remove('c-tab--active', 'c-tab__menu__item');\r\n            tabClone.classList.add('c-tab__content__btn');\r\n            tabClone.addEventListener('click', changeTab);\r\n            let tabContent = document.querySelector(`.c-tab__content__item[data-index='${i}']`);\r\n            if (tabContent) tabContent.insertAdjacentElement('afterbegin', tabClone);\r\n        }\r\n    }\r\n});","// carousel for mobile \r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n  var glideElementsExplore = document.querySelectorAll('.explore-further-slider');\r\n  [].forEach.call(glideElementsExplore, function(glideItem) {\r\n    var glideClass = '.' + glideItem.className.toString().split(' ').join('.');\r\n\r\n    var perView = 3;\r\n    var totalSlide = 1;\r\n    if (glideItem.getAttribute('data-preView')) perView = glideItem.getAttribute('data-preView');\r\n    if (glideItem.getAttribute('data-preView')) totalSlide = glideItem.getAttribute('data-totalSlide');\r\n\r\n\r\n    new Glide(glideClass, {\r\n      // type: \"carousel\",\r\n      type: \"slider\",\r\n      // focusAt: \"center\",\r\n      perView: perView,\r\n      // startAt: 1,\r\n      bound: true,\r\n      breakpoints: {\r\n        1024: {\r\n          perView: perView,\r\n        },\r\n        768: {\r\n          perView: 1,\r\n        },\r\n      },\r\n    }).mount();\r\n  });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  const carousels = document.querySelectorAll('.carousel');\r\n  carousels.forEach(carousel => {\r\n  const indicatorsContainer = carousel.querySelector('.carousel-indicators');\r\n  const items = carousel.querySelectorAll('.carousel-item');\r\n  let startX = null;\r\n  items.forEach((item, index) => {\r\n  const indicator = document.createElement('div');\r\n  indicator.classList.add('carousel-indicator');\r\n  if (index === 0) indicator.classList.add('active');\r\n  indicator.addEventListener('click', () => {\r\n  goToItem(index, carousel);\r\n  });\r\n  indicatorsContainer.appendChild(indicator);\r\n  });\r\n  function goToItem(index, carousel) {\r\n  const carouselWidth = carousel.offsetWidth;\r\n  const offset = index * carouselWidth;\r\n  carousel.querySelector('.carousel-inner').style.transform = `translateX(-${offset}px)`;\r\n  const indicators = indicatorsContainer.querySelectorAll('.carousel-indicator');\r\n  indicators.forEach((indicator, i) => {\r\n  indicator.classList.toggle('active', i === index);\r\n  });\r\n  }\r\n  // Swipe gesture handling\r\n  carousel.addEventListener('touchstart', touchStart, { passive: true });\r\n  carousel.addEventListener('touchmove', touchMove, { passive: true });\r\n  function touchStart(event) {\r\n  startX = event.touches[0].clientX;\r\n  }\r\n  function touchMove(event) {\r\n  if (!startX) return;\r\n  const endX = event.touches[0].clientX;\r\n  const diffX = startX - endX;\r\n  if (Math.abs(diffX) > 50) {\r\n  if (diffX > 0) {\r\n  // Swiped left\r\n  goToNextItem(carousel);\r\n  } else {\r\n  // Swiped right\r\n  goToPrevItem(carousel);\r\n  }\r\n  startX = null;\r\n  }\r\n  }\r\n  function goToNextItem(carousel) {\r\n  const currentActiveIndex = Array.from(indicatorsContainer.querySelectorAll('.carousel-indicator')).findIndex(indicator => indicator.classList.contains('active'));\r\n  const nextIndex = (currentActiveIndex + 1) % items.length;\r\n  goToItem(nextIndex, carousel);\r\n  }\r\n  function goToPrevItem(carousel) {\r\n  const currentActiveIndex = Array.from(indicatorsContainer.querySelectorAll('.carousel-indicator')).findIndex(indicator => indicator.classList.contains('active'));\r\n  const prevIndex = (currentActiveIndex - 1 + items.length) % items.length;\r\n  goToItem(prevIndex, carousel);\r\n  }\r\n  });\r\n  });","    // table tab\r\n    document.querySelectorAll('.table-secondary').forEach(function(item) {\r\n        item.addEventListener('click', function() {\r\n        var detailRow = this.nextElementSibling;\r\n        var allDetailRows = document.querySelectorAll('.tier-details');\r\n        if (detailRow.classList.contains('tier-details')) {\r\n        allDetailRows.forEach(function(row) {\r\n        if (row !== detailRow && !row.classList.contains('hidden')) {\r\n        //row.classList.add('hidden');\r\n        //row.previousElementSibling.querySelector('.arrow-move').innerHTML = '<img src=\"https://dsa-2021.netlify.app/assets/img/right-arrow-t.svg\" alt=\"image\">';\r\n        }\r\n        });\r\n        detailRow.classList.toggle('hidden');\r\n        var arrow = this.querySelector('.arrow-move');\r\n        arrow.innerHTML = detailRow.classList.contains('hidden') ? '<img src=\"/img/right-arrow-t.svg\" alt=\"image\">' : '<img src=\"/img/down-arrow-t.svg\" alt=\"image\">';\r\n        }\r\n        });\r\n        });\r\n        // Function to toggle arrow icon\r\n        function toggleArrow(icon) {\r\n        var currentSrc = icon.getAttribute('src');\r\n        if (currentSrc.includes('down-arrow-t.svg')) {\r\n        icon.setAttribute('src', '/img/right-arrow-t.svg');\r\n        } else {\r\n        icon.setAttribute('src', '/img/down-arrow-t.svg');\r\n        }\r\n        }\r\n        document.querySelectorAll('.across-eight-key a[href^=\"#\"]').forEach(function(anchor) {\r\n        anchor.addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        var targetId = this.getAttribute('href').substring(1);\r\n        var targetElement = document.getElementById(targetId);\r\n        if (targetElement) {\r\n        var allDetailRows = document.querySelectorAll('.tier-details');\r\n        allDetailRows.forEach(function(row) {\r\n        if (row !== targetElement) {\r\n        row.classList.add('hidden');\r\n        }\r\n        });\r\n        targetElement.classList.toggle('hidden');\r\n        setTimeout(function() {\r\n        window.scroll({\r\n        top: targetElement.getBoundingClientRect().top + window.scrollY - 250,\r\n        behavior: 'smooth'\r\n        });\r\n        }, 100); // Delay added for smooth scrolling\r\n        // Toggle arrow icon\r\n        var icon = document.getElementById(targetId).previousElementSibling.querySelector('.arrow-move img');\r\n        toggleArrow(icon);\r\n        // Reset other arrow icons\r\n        var allArrowIcons = document.querySelectorAll('.arrow-move img');\r\n        allArrowIcons.forEach(function(arrowIcon) {\r\n        if (arrowIcon !== icon) {\r\n        var otherSrc = arrowIcon.getAttribute('src');\r\n        if (otherSrc.includes('down-arrow-t.svg')) {\r\n        arrowIcon.setAttribute('src', '/img/right-arrow-t.svg');\r\n        }\r\n        }\r\n        });\r\n        }\r\n        });\r\n        });\r\n        // Show default-open row\r\n        document.querySelectorAll('.default-open').forEach(function(row) {\r\n        row.classList.remove('hidden');\r\n        row.previousElementSibling.querySelector('.arrow-move').innerHTML = '<img src=\"/img/down-arrow-t.svg\" alt=\"image\">';\r\n        });\r\n        // document.addEventListener('DOMContentLoaded', function() {\r\n        // const sourceContent = document.querySelector('.source-content');\r\n        // const destinationClone = document.querySelector('.destination-clone');\r\n        // function cloneContent() {\r\n        // destinationClone.innerHTML = sourceContent.innerHTML;\r\n        // }\r\n        // cloneContent();\r\n        // });\r\n\r\n        \r\n        //Highlights from Each Country’s Ranking\r\n    // document.addEventListener('DOMContentLoaded', function () {\r\n    // const commonTabButtons = document.querySelectorAll('.common-tab-button');\r\n    // const commonTabContents = document.querySelectorAll('.common-tab-content');\r\n    // const commonTabContainer = document.querySelector('.common-tab-container');\r\n    // if (!commonTabContainer) {\r\n    //     console.warn(\"Warning: '.common-tab-container' not found. Skipping tab script.\");\r\n    //     return; // Stop execution if the container doesn't exist\r\n    // }\r\n    // const commonTabDropdown = document.createElement('select');\r\n    // commonTabDropdown.id = 'tabDropdown';\r\n    // commonTabButtons.forEach(button => {\r\n    // const option = document.createElement('option');\r\n    // option.value = button.getAttribute('data-tab');\r\n    // option.textContent = button.textContent;\r\n    // commonTabDropdown.appendChild(option);\r\n    // });\r\n    // commonTabContainer.insertBefore(commonTabDropdown, commonTabContents[0]);\r\n    // function showTabContent(commonTabId) {\r\n    // commonTabContents.forEach(content => content.style.display = 'none');\r\n    // document.getElementById(commonTabId).style.display = 'block';\r\n    // commonTabButtons.forEach(button => button.classList.remove('active'));\r\n    // document.querySelector(`.common-tab-button[data-tab=\"${commonTabId}\"]`).classList.add('active');\r\n    // }\r\n    // commonTabButtons.forEach(button => {\r\n    // button.addEventListener('click', function () {\r\n    // const commonTabId = this.getAttribute('data-tab');\r\n    // showTabContent(commonTabId);\r\n    // commonTabDropdown.value = commonTabId;\r\n    // });\r\n    // });\r\n    // commonTabDropdown.addEventListener('change', function () {\r\n    // const commonTabId = this.value;\r\n    // showTabContent(commonTabId);\r\n    // });\r\n    // showTabContent('dectabB');\r\n    // });\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n    document.querySelectorAll('.common-tab-container').forEach(container => {\r\n        const tabButtons = container.querySelectorAll('.common-tab-button');\r\n        const tabContents = container.querySelectorAll('.common-tab-content');\r\n\r\n        if (!tabButtons.length || !tabContents.length) return;\r\n\r\n        // Create dropdown\r\n        const dropdown = document.createElement('select');\r\n        dropdown.classList.add('tab-dropdown');\r\n\r\n        tabButtons.forEach(button => {\r\n            const option = document.createElement('option');\r\n            option.value = button.getAttribute('data-tab');\r\n            option.textContent = button.textContent;\r\n            dropdown.appendChild(option);\r\n        });\r\n\r\n        container.insertBefore(dropdown, tabContents[0]);\r\n\r\n        function showTab(tabId) {\r\n            tabContents.forEach(content => content.style.display = 'none');\r\n            const target = container.querySelector(`#${tabId}`);\r\n            if (target) target.style.display = 'block';\r\n\r\n            tabButtons.forEach(button => button.classList.remove('active'));\r\n            const activeButton = container.querySelector(`.common-tab-button[data-tab=\"${tabId}\"]`);\r\n            if (activeButton) activeButton.classList.add('active');\r\n\r\n            dropdown.value = tabId;\r\n        }\r\n\r\n        // Event listeners\r\n        tabButtons.forEach(button => {\r\n            button.addEventListener('click', () => {\r\n                showTab(button.getAttribute('data-tab'));\r\n            });\r\n        });\r\n\r\n        dropdown.addEventListener('change', () => {\r\n            showTab(dropdown.value);\r\n        });\r\n\r\n        // Determine the default tab\r\n        const defaultButton = container.querySelector('.common-tab-button[data-default=\"true\"]') ||\r\n                              container.querySelector('.common-tab-button.active') ||\r\n                              tabButtons[0];\r\n        const defaultTabId = defaultButton.getAttribute('data-tab');\r\n\r\n        showTab(defaultTabId);\r\n    });\r\n});\r\n"]}